var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/classes/Blob.html",[0,0.248,1,2.25]],["body/classes/Blob.html",[0,0.26,1,3.167,2,0.206,3,0.154,4,2.848,5,1.891,6,0.154,7,0.467,8,3.167,9,5.698,10,1.931,11,6.089,12,5.698,13,0.42,14,1.411,15,5.049,16,1.111,17,3.763,18,4.863,19,0.613,20,5.049,21,1.411,22,0.02,23,1.262,24,5.42,25,4.309,26,2.284,27,1.798,28,3.763,29,5.049,30,5.049,31,2.848,32,0.994,33,0.015,34,0.015]],["title/classes/BodyMixin.html",[0,0.248,35,2.715]],["body/classes/BodyMixin.html",[0,0.244,1,3.456,2,0.193,3,0.144,6,0.144,7,0.446,8,3.718,10,2.027,13,0.341,14,1.349,16,1.041,19,0.355,21,0.985,22,0.021,23,0.881,32,1.641,33,0.014,34,0.014,35,2.668,36,2.211,37,2.668,38,4.171,39,5.604,40,4.171,41,5.195,42,3.773,43,3.456,44,4.702,45,5.51,46,2.798,47,4.829,48,3.524,49,3.008,50,3.308,51,3.656,52,5.299,53,3.524,54,3.524]],["title/interfaces/BridgeTransferOptions.html",[55,0.076,56,2.715]],["body/interfaces/BridgeTransferOptions.html",[2,0.269,3,0.201,6,0.201,7,0.554,13,0.37,19,0.677,22,0.02,33,0.018,34,0.018,55,0.105,56,3.723,57,3.723,58,5.517,59,5.517,60,2.35]],["title/interfaces/CacheSetOptions.html",[55,0.076,61,2.456]],["body/interfaces/CacheSetOptions.html",[2,0.257,3,0.192,6,0.192,7,0.539,13,0.392,19,0.698,22,0.02,26,2.035,27,1.721,33,0.017,34,0.017,55,0.1,60,2.035,61,3.217,62,3.556,63,6.334,64,4.795,65,4.795]],["title/classes/Collection.html",[0,0.248,66,2.456]],["body/classes/Collection.html",[0,0.237,2,0.187,3,0.14,6,0.14,7,0.438,10,1.961,13,0.38,14,1.322,16,1.011,19,0.589,21,1.635,22,0.02,23,1.685,27,2.053,32,1.434,33,0.014,34,0.014,49,4.039,66,4.462,67,2.59,68,1.717,69,5.026,70,2.227,71,3.583,72,4.039,73,3.422,74,4.039,75,3.422,76,3.583,77,4.009,78,4.431,79,3.422,80,3.583,81,3.422,82,2.921]],["title/interfaces/Color.html",[55,0.076,83,2.456]],["body/interfaces/Color.html",[2,0.237,3,0.177,6,0.177,7,0.512,13,0.398,22,0.02,26,2.444,33,0.016,34,0.016,55,0.092,83,2.967,84,1.602,85,4.868,86,5.208,87,6.102,88,6.102,89,4.868,90,4.332,91,4.332,92,4.332,93,3.828,94,6.102,95,4.332,96,4.332]],["title/classes/CookieJar.html",[0,0.248,97,2.25]],["body/classes/CookieJar.html",[0,0.266,2,0.21,3,0.157,5,1.929,6,0.157,7,0.473,10,1.813,13,0.316,14,1.43,16,1.134,19,0.643,21,1.608,22,0.021,23,1.644,32,1.352,33,0.015,34,0.015,68,1.073,70,2.408,78,2.906,97,2.408,98,2.906,99,3.277,100,3.839,101,4.125,102,4.204,103,6.139,104,3.873,105,3.839,106,3.277,107,1.807,108,3.839,109,3.839,110,5.117,111,1.696,112,1.807,113,1.807,114,2.906,115,2.906]],["title/interfaces/CreateOptions.html",[55,0.076,116,2.715]],["body/interfaces/CreateOptions.html",[2,0.25,3,0.187,6,0.187,7,0.53,13,0.406,22,0.021,26,2.409,27,1.695,33,0.017,34,0.017,55,0.097,83,3.93,84,1.695,89,4.742,116,3.47,117,6.264,118,3.93,119,3.93]],["title/classes/Document.html",[0,0.248,120,2.456]],["body/classes/Document.html",[0,0.218,2,0.172,3,0.129,6,0.129,7,0.413,8,2.801,10,2.023,13,0.276,14,1.247,16,0.93,19,0.654,21,1.817,22,0.021,23,1.625,32,1.682,33,0.013,34,0.013,46,2.587,120,3.058,121,1.824,122,1.482,123,2.587,124,3.865,125,4.427,126,3.926,127,4.464,128,4.464,129,3.81,130,3.379,131,3.379,132,3.058,133,3.379,134,4.464,135,2.383,136,2.383,137,3.149,138,3.149,139,3.254,140,3.149,141,2.687,142,3.149,143,3.058,144,2.383,145,2.383,146,2.156,147,3.058,148,2.383,149,3.149]],["title/classes/DocumentParser.html",[0,0.248,150,2.715]],["body/classes/DocumentParser.html",[0,0.258,2,0.204,3,0.152,6,0.152,7,0.464,10,2.082,13,0.351,14,1.403,16,1.483,19,0.611,21,1.696,22,0.021,23,1.517,32,1.604,33,0.015,34,0.015,40,2.826,41,3.801,113,2.67,121,2.163,125,4.843,129,4.286,132,3.439,146,2.557,147,4.157,150,2.826,151,5.022,152,5.022,153,3.733,154,3.733,155,3.733,156,3.733,157,2.826,158,4.286]],["title/classes/Element.html",[0,0.248,139,2.25]],["body/classes/Element.html",[0,0.215,2,0.17,3,0.127,6,0.127,7,0.409,8,2.774,10,2.05,13,0.192,14,1.236,16,0.918,19,0.652,21,1.811,22,0.021,23,1.672,32,1.676,33,0.013,34,0.013,46,2.563,70,2.081,113,2.081,121,1.8,122,1.462,123,2.563,126,3.898,130,3.348,131,3.348,132,3.029,133,3.348,135,2.352,136,2.352,139,2.774,141,3.775,143,3.029,144,2.352,145,2.352,146,2.128,147,3.029,148,2.352,159,4.423,160,4.423,161,4.423,162,4.423,163,4.423,164,4.423,165,3.107,166,3.107,167,3.107,168,3.107,169,3.107,170,3.107,171,3.107]],["title/interfaces/ExtendOptions.html",[55,0.076,172,2.715]],["body/interfaces/ExtendOptions.html",[2,0.246,3,0.184,6,0.184,7,0.524,13,0.403,19,0.709,22,0.02,26,2.462,33,0.017,34,0.017,55,0.096,84,1.663,172,3.404,173,6.209,174,5.3,175,6.209,176,5.3]],["title/classes/FetchEvent.html",[0,0.248,177,2.715]],["body/classes/FetchEvent.html",[0,0.267,2,0.211,3,0.157,5,1.937,6,0.157,7,0.474,10,2.061,13,0.422,14,1.434,16,1.138,19,0.516,21,1.434,22,0.021,23,1.282,32,1.019,33,0.015,34,0.015,60,1.792,68,1.077,111,2.717,113,1.814,158,5.619,177,2.918,178,2.918,179,1.937,180,3.29,181,3.855,182,3.855,183,3.855,184,2.234,185,5.767,186,5.767,187,3.855,188,3.884,189,3.855,190,3.29]],["title/interfaces/FlyRequest.html",[55,0.076,191,2.715]],["body/interfaces/FlyRequest.html",[2,0.27,3,0.202,6,0.202,7,0.556,13,0.372,19,0.605,22,0.019,27,1.776,33,0.018,34,0.018,55,0.105,68,1.381,111,2.184,122,2.326,179,2.484,191,3.742,192,3.742,193,4.943,194,4.219,195,2.864,196,5.53]],["title/interfaces/FlyRequestInit.html",[55,0.076,197,2.715]],["body/interfaces/FlyRequestInit.html",[2,0.266,3,0.199,6,0.199,7,0.551,13,0.368,19,0.675,22,0.02,26,2.342,33,0.018,34,0.018,55,0.103,122,2.29,197,3.684,198,3.333,199,4.867,200,6.435,201,6.435]],["title/classes/FormData.html",[0,0.248,43,2.25]],["body/classes/FormData.html",[0,0.29,2,0.158,3,0.118,5,1.452,6,0.118,7,0.388,10,2.092,13,0.383,14,1.173,16,1.239,19,0.605,21,1.68,22,0.021,23,1.685,27,2.084,32,1.739,33,0.012,34,0.012,43,1.812,51,2.187,60,1.009,68,0.807,69,3.742,70,2.919,76,3.177,102,2.874,104,3.177,106,2.466,107,1.975,112,1.359,113,2.326,114,2.187,179,1.452,202,2.466,203,2.466,204,4.943,205,4.943,206,4.197,207,4.943,208,3.582,209,2.889,210,4.943,211,2.889,212,2.889,213,2.889]],["title/interfaces/JpegOptions.html",[55,0.076,214,2.715]],["body/interfaces/JpegOptions.html",[2,0.218,3,0.163,6,0.163,7,0.485,13,0.385,19,0.7,22,0.02,26,1.832,33,0.015,34,0.015,55,0.085,60,2.321,68,1.113,84,1.473,107,1.875,214,3.016,215,3.97,216,3.97,217,5.863,218,4.716,219,5.317,220,5.524,221,3.985,222,3.985,223,3.985,224,3.985,225,2.759,226,2.145,227,2.5,228,3.401,229,3.401,230,2.5,231,3.401,232,2.729,233,3.016,234,3.016]],["title/interfaces/Metadata.html",[55,0.076,235,2.078]],["body/interfaces/Metadata.html",[2,0.17,3,0.127,6,0.127,7,0.409,13,0.408,19,0.714,22,0.02,23,0.777,26,2.44,27,1.657,33,0.013,34,0.013,55,0.066,60,2.152,70,1.462,84,1.149,85,2.352,86,2.652,89,4.247,118,3.23,119,3.23,235,1.8,236,4.395,237,4.395,238,5.149,239,5.149,240,5.61,241,4.788,242,3.107,243,4.423,244,2.652,245,4.423,246,2.652,247,4.423,248,5.149,249,2.652,250,3.107,251,3.107,252,3.775,253,4.423,254,4.423,255,3.107,256,3.107,257,3.107,258,2.652,259,3.107,260,3.107,261,1.8,262,3.107,263,3.107,264,3.107,265,3.107,266,3.107,267,3.107]],["title/interfaces/Metadata-1.html",[55,0.064,232,2.053,235,1.737]],["body/interfaces/Metadata-1.html",[2,0.238,3,0.178,6,0.178,7,0.513,13,0.428,19,0.648,22,0.02,26,2.377,27,1.64,33,0.016,34,0.016,55,0.093,64,4.629,65,4.629,68,1.216,112,2.048,235,3.217,261,3.543,268,2.73,269,4.352,270,2.73,271,5.22,272,3.483]],["title/classes/Middleware.html",[0,0.248,273,2.25]],["body/classes/Middleware.html",[0,0.259,2,0.205,3,0.153,5,1.883,6,0.153,7,0.465,10,1.929,13,0.404,14,1.407,16,1.107,19,0.507,21,1.589,22,0.021,23,1.259,32,1.331,33,0.015,34,0.015,37,2.837,68,1.407,107,3.073,111,1.656,124,3.449,184,2.172,190,4.853,195,2.172,273,3.979,274,2.351,275,3.748,276,3.199,277,4.853,278,3.199,279,3.748,280,4.801,281,3.748,282,3.748,283,3.449,284,3.748,285,3.748,286,3.748,287,3.199,288,3.748]],["title/classes/MiddlewareChain.html",[0,0.248,289,2.715]],["body/classes/MiddlewareChain.html",[0,0.221,2,0.175,3,0.131,5,1.609,6,0.131,7,0.418,10,2.06,13,0.279,14,1.262,16,1.334,19,0.572,21,1.589,22,0.021,23,1.421,26,1.578,32,1.585,33,0.015,34,0.013,41,3.42,68,1.463,104,2.424,107,2.463,111,1.415,112,1.507,113,1.507,184,1.855,227,2.834,273,3.762,274,2.009,277,4.468,278,3.856,280,3.963,287,4.468,289,2.424,290,6.531,291,3.202,292,3.202,293,5.235,294,4.518,295,5.235,296,4.518,297,3.202,298,4.518,299,3.202,300,3.202,301,2.733,302,3.202,303,3.202,304,3.202]],["title/classes/MiddlewareSettings.html",[0,0.248,283,2.456]],["body/classes/MiddlewareSettings.html",[0,0.317,2,0.25,3,0.187,6,0.187,7,0.53,10,1.939,13,0.387,14,1.603,16,1.354,19,0.577,21,1.603,22,0.021,23,1.566,32,1.211,33,0.017,34,0.017,107,3.089,114,3.47,272,3.6,274,2.876,283,3.139,305,4.584]],["title/interfaces/MountInfo.html",[55,0.076,306,2.715]],["body/interfaces/MountInfo.html",[2,0.283,3,0.212,6,0.212,22,0.018,27,1.532,33,0.018,34,0.018,55,0.11,68,1.449,179,2.607,195,3.006,208,4.428,306,3.927,307,4.428,308,3.927,309,4.428,310,5.188,311,5.188,312,4.428]],["title/classes/Node.html",[0,0.248,123,2.078]],["body/classes/Node.html",[0,0.252,2,0.199,3,0.149,6,0.149,7,0.457,8,3.101,10,1.991,13,0.225,14,1.381,16,1.077,19,0.652,21,1.81,22,0.021,23,1.619,32,1.661,33,0.015,34,0.015,46,2.864,113,1.716,121,2.113,123,2.864,126,4.245,130,3.742,131,3.742,132,3.385,133,3.742,135,2.76,136,2.76,139,2.288,143,2.498,144,2.76,145,2.76,146,2.498,147,3.385,148,2.76,313,5.608,314,3.647,315,3.647]],["title/interfaces/OperationResult.html",[55,0.076,316,2.715]],["body/interfaces/OperationResult.html",[2,0.37,3,0.205,6,0.205,7,0.561,13,0.375,22,0.02,33,0.018,34,0.018,42,4.157,55,0.107,77,4.468,84,1.857,235,3.517,316,3.802]],["title/interfaces/OverlayOptions.html",[55,0.076,317,2.715]],["body/interfaces/OverlayOptions.html",[2,0.221,3,0.165,6,0.165,7,0.489,13,0.412,19,0.722,22,0.02,26,2.329,33,0.016,34,0.016,55,0.086,60,2.187,84,1.492,174,5.035,176,5.035,225,1.899,236,5.035,317,3.055,318,5.899,319,5.692,320,5.899,321,4.036,322,4.036,323,3.445]],["title/interfaces/PngOptions.html",[55,0.076,324,2.715]],["body/interfaces/PngOptions.html",[2,0.217,3,0.162,6,0.162,7,0.484,13,0.384,19,0.699,22,0.02,26,1.827,33,0.015,34,0.015,55,0.084,60,2.318,68,1.109,84,1.467,93,2.489,216,3.959,218,4.708,219,5.308,225,2.927,226,2.136,227,3.281,228,3.387,229,3.387,230,3.281,324,3.004,325,4.464,326,5.851,327,5.851,328,3.968,329,3.968,330,3.968,331,3.968,332,3.004,333,3.968,334,4.464]],["title/interfaces/ProxyOptions.html",[55,0.076,335,2.715]],["body/interfaces/ProxyOptions.html",[2,0.186,3,0.139,5,1.707,6,0.139,7,0.435,13,0.379,19,0.667,22,0.02,27,1.723,33,0.014,34,0.014,55,0.072,60,1.888,68,0.949,70,1.599,107,2.216,111,2.802,225,1.599,226,1.829,230,2.954,261,3.948,272,2.954,276,2.9,301,2.9,308,2.572,335,2.572,336,2.9,337,4.019,338,5.405,339,5.835,340,3.398,341,4.709,342,6.129,343,2.9,344,3.398,345,3.225,346,3.398,347,3.398,348,3.398,349,3.398,350,4.709,351,4.709,352,2.9,353,3.398,354,3.398,355,3.398,356,3.398,357,4.709,358,3.398,359,4.019,360,4.709,361,3.398,362,3.398,363,3.398]],["title/interfaces/ReadableStreamController.html",[55,0.076,364,2.715]],["body/interfaces/ReadableStreamController.html",[2,0.261,3,0.195,6,0.195,13,0.295,14,1.643,19,0.48,21,1.332,22,0.021,23,1.192,27,1.737,32,1.554,33,0.017,34,0.017,36,2.992,42,4.028,55,0.101,113,2.767,364,3.61,365,6.377,366,5.881,367,4.769,368,4.07]],["title/classes/Request.html",[0,0.248,111,1.584]],["body/classes/Request.html",[0,0.234,2,0.185,3,0.138,5,1.701,6,0.138,7,0.434,10,2.099,13,0.409,14,1.71,16,1,19,0.341,21,0.946,22,0.021,23,0.846,24,2.889,27,2.049,32,0.895,33,0.014,34,0.014,38,2.563,46,2.722,68,0.946,97,3.84,101,2.947,102,3.217,111,2.383,122,1.593,184,1.962,188,3.556,196,4.604,261,3.546,345,3.694,369,2.889,370,5.394,371,4.604,372,5.394,373,4.604,374,3.385,375,2.319,376,2.889]],["title/interfaces/ResizeOptions.html",[55,0.076,377,2.456]],["body/interfaces/ResizeOptions.html",[2,0.236,3,0.176,6,0.176,7,0.51,13,0.341,19,0.695,22,0.019,33,0.016,34,0.016,55,0.092,60,1.928,68,1.205,84,1.594,215,3.264,225,2.598,226,2.321,227,2.705,377,2.953,378,3.264,379,3.82,380,6.089,381,5.794,382,4.312,383,4.312,384,4.312,385,3.264,386,4.312,387,4.312,388,3.68,389,4.312,390,4.312,391,4.312,392,4.312,393,4.312,394,3.68]],["title/classes/Response.html",[0,0.248,112,1.687]],["body/classes/Response.html",[0,0.315,2,0.177,3,0.132,6,0.132,7,0.421,10,2.063,13,0.422,14,1.271,16,0.955,19,0.458,21,1.271,22,0.021,23,1.137,26,1.995,27,1.844,32,1.203,33,0.013,34,0.013,38,3.445,46,2.637,60,1.589,68,0.904,70,1.522,97,3.776,101,2.855,102,3.117,112,2.688,122,1.522,124,3.117,179,1.625,188,3.445,203,2.761,225,1.522,261,3.488,271,5.137,345,3.912,373,4.493,376,2.761,395,2.761,396,4.493,397,5.264,398,4.55,399,3.235,400,3.235,401,3.235]],["title/interfaces/ResponseCacheSetOptions.html",[55,0.076,402,2.715]],["body/interfaces/ResponseCacheSetOptions.html",[2,0.279,3,0.208,6,0.208,7,0.567,13,0.315,19,0.617,22,0.019,27,1.81,33,0.018,34,0.018,55,0.108,61,3.495,122,2.402,268,3.202,402,3.863,403,6.569]],["title/interfaces/ScaleOptions.html",[55,0.076,404,2.715]],["body/interfaces/ScaleOptions.html",[2,0.216,3,0.161,6,0.161,7,0.482,13,0.361,19,0.68,22,0.019,33,0.015,34,0.015,55,0.084,60,2.169,68,1.104,84,1.461,118,2.479,119,2.479,122,1.859,225,2.747,226,2.127,230,2.479,377,2.706,378,3.948,379,3.895,404,2.991,405,5.216,406,2.991,407,4.452,408,5.839,409,5.77,410,5.839,411,3.952,412,5.216,413,3.952,414,3.952,415,4.452,416,2.991,417,3.373,418,3.952,419,3.373,420,3.952,421,3.952,422,3.952]],["title/interfaces/StaticServerOptions.html",[55,0.076,423,2.715]],["body/interfaces/StaticServerOptions.html",[2,0.245,3,0.253,6,0.266,7,0.523,13,0.415,19,0.7,22,0.02,27,1.922,33,0.017,34,0.017,55,0.095,68,1.25,80,3.388,124,3.065,272,3.546,423,3.388,424,3.388,425,4.475,426,4.475,427,4.69,428,6.196]],["title/classes/TextDecoder.html",[0,0.248,429,2.715]],["body/classes/TextDecoder.html",[0,0.319,2,0.252,3,0.188,6,0.188,7,0.532,10,1.942,13,0.285,14,1.608,16,1.36,19,0.579,21,1.608,22,0.021,23,1.439,32,1.217,33,0.017,34,0.017,375,3.155,429,3.487,430,3.155,431,3.155,432,4.978,433,5.756,434,4.606,435,4.606]],["title/classes/TextEncoder.html",[0,0.248,436,2.715]],["body/classes/TextEncoder.html",[0,0.344,2,0.272,3,0.203,6,0.203,10,1.781,14,1.685,16,1.781,19,0.5,21,1.388,22,0.02,23,1.242,32,1.313,33,0.018,34,0.018,375,3.403,430,3.403,431,3.403,432,4.565,436,3.762,437,4.969]],["title/classes/TimeoutError.html",[0,0.248,438,2.715]],["body/classes/TimeoutError.html",[0,0.377,2,0.298,3,0.223,22,0.019,33,0.019,34,0.019,122,2.568,198,3.738,438,4.131,439,4.658]],["title/interfaces/WebpOptions.html",[55,0.076,440,2.715]],["body/interfaces/WebpOptions.html",[2,0.202,3,0.151,6,0.151,7,0.462,13,0.391,19,0.703,22,0.02,26,2.113,33,0.015,34,0.015,55,0.079,60,2.273,68,1.035,84,1.37,85,2.804,93,2.323,216,3.781,218,4.58,220,5.391,225,2.66,226,1.994,227,3.546,231,4.263,232,2.537,233,4.279,234,2.804,237,3.161,332,3.781,371,4.263,375,2.537,385,3.781,440,2.804,441,5.652,442,6.05,443,5.652,444,3.704,445,3.704,446,3.704,447,3.704]],["title/changelog.html",[31,2.269,115,2.269,448,2.998]],["body/changelog.html",[3,0.127,22,0.015,33,0.013,34,0.013,118,1.956,119,1.956,120,2.135,343,2.661,378,2.36,379,1.956,388,2.661,406,2.36,407,2.661,419,3.784,449,2.661,450,3.117,451,3.117,452,3.117,453,4.433,454,3.117,455,6.771,456,6.838,457,6.838,458,3.784,459,5.779,460,6.771,461,6.771,462,5.125,463,6.771,464,3.117,465,3.117,466,3.117,467,3.117,468,3.117,469,3.117,470,5.936,471,3.117,472,3.117,473,3.117,474,3.117,475,3.117,476,5.936,477,3.117,478,3.117,479,3.117,480,3.117]],["title/coverage.html",[481,4.171]],["body/coverage.html",[0,0.379,1,0.561,3,0.036,4,1.212,13,0.055,22,0.021,33,0.005,34,0.005,35,0.677,36,2.126,43,0.561,50,0.612,55,0.121,56,0.677,57,1.647,61,0.612,62,3.559,66,0.612,67,1.647,71,1.647,77,0.612,83,0.612,84,1.884,93,4.445,97,0.561,98,2.006,107,0.754,111,0.395,112,0.421,116,0.677,120,1.097,121,2.134,123,0.518,139,0.561,150,0.677,172,0.677,177,0.677,178,2.788,179,0.449,191,0.677,192,1.212,195,4.021,197,0.677,198,1.815,202,0.763,214,0.677,233,4.881,234,1.212,235,0.928,261,0.518,268,3.04,270,1.005,273,1.005,274,1.913,283,0.612,289,0.677,306,0.677,307,1.367,309,0.763,316,0.677,317,0.677,324,0.677,334,1.367,335,0.677,336,1.856,337,0.763,364,0.677,369,1.856,377,0.612,379,0.561,395,1.367,402,0.677,404,0.677,416,0.677,423,0.677,424,1.647,427,0.677,429,0.677,430,1.49,431,1.49,436,0.677,438,0.677,440,0.677,449,0.763,481,0.763,482,0.894,483,0.894,484,0.894,485,1.602,486,6.966,487,0.894,488,3.049,489,0.894,490,0.894,491,4.773,492,0.894,493,0.763,494,2.262,495,0.894,496,0.894,497,1.647,498,1.856,499,0.763,500,0.763,501,1.602,502,0.894,503,1.602,504,0.763,505,1.212,506,3.876,507,0.763,508,0.894,509,0.894,510,0.894,511,0.894,512,0.894,513,0.894,514,0.763,515,3.362,516,0.894,517,0.894,518,0.894,519,0.894,520,0.894,521,0.894,522,0.894,523,0.894,524,0.894,525,0.894,526,0.894,527,0.894,528,0.763,529,0.763,530,6.272,531,1.856,532,1.367,533,2.175,534,1.367,535,0.763,536,0.763,537,0.763,538,1.367,539,0.763,540,0.894,541,0.894,542,0.894,543,0.894,544,0.894,545,0.894,546,0.894,547,0.763,548,0.894,549,0.894,550,0.894,551,0.894,552,0.763,553,0.894,554,1.602,555,0.894,556,2.602,557,0.894,558,0.894,559,0.763,560,0.763,561,0.894,562,0.894,563,0.894,564,1.602,565,1.602,566,0.894,567,0.894,568,0.894,569,0.894,570,0.894,571,0.894,572,0.894,573,0.894,574,1.602,575,0.894,576,0.894,577,1.367,578,0.894,579,0.894,580,0.894,581,1.856,582,0.894,583,0.894,584,0.763,585,0.894,586,2.175,587,0.763,588,0.894,589,1.856,590,0.894,591,0.763,592,0.763,593,1.602,594,0.894,595,0.894,596,0.763,597,1.602,598,0.894,599,0.894,600,0.894,601,1.367,602,2.893,603,0.894,604,0.894,605,0.894,606,0.894,607,0.894,608,0.894,609,0.763]],["title/dependencies.html",[462,2.269,610,3.679]],["body/dependencies.html",[22,0.021,33,0.017,34,0.017,101,2.992,184,2.763,270,2.992,345,3.266,610,4.07,611,4.769,612,4.07,613,4.769,614,4.769,615,4.07,616,4.07,617,4.769,618,4.769,619,4.769,620,4.769,621,4.769,622,4.769,623,4.769,624,4.769,625,4.769,626,4.769,627,4.769,628,4.769,629,4.769]],["title/miscellaneous/enumerations.html",[630,1.737,631,3.679]],["body/miscellaneous/enumerations.html",[6,0.146,22,0.021,33,0.014,34,0.014,70,3.404,84,1.323,93,3.061,118,2.244,119,2.244,232,2.45,244,3.053,246,3.053,319,4.164,323,3.053,379,2.244,381,4.164,394,4.164,409,4.739,415,3.053,417,4.164,539,3.053,584,3.053,587,4.164,630,2.073,631,3.053,632,5.964,633,4.879,634,3.578,635,4.879,636,3.578,637,3.578,638,3.578,639,3.578,640,3.578,641,3.578,642,3.578,643,3.578,644,3.578,645,3.578,646,3.578,647,3.578,648,3.578,649,4.879,650,4.879,651,4.879,652,3.578,653,3.578,654,3.578]],["title/index.html",[6,0.122,31,2.269,115,2.269]],["body/index.html",[22,0.019,33,0.019,34,0.019,497,4.204,655,5.553,656,5.553,657,5.553]],["title/modules.html",[658,4.171]],["body/modules.html",[22,0.019,33,0.019,34,0.019,658,4.825]],["title/overview.html",[659,4.171]],["body/overview.html",[0,0.382,22,0.019,33,0.019,34,0.019,55,0.117,458,4.712,659,4.712,660,5.521]],["title/miscellaneous/typealiases.html",[630,1.737,661,4.311]],["body/miscellaneous/typealiases.html",[1,3.21,2,0.21,4,2.906,6,0.157,13,0.237,18,4.912,22,0.021,27,1.511,33,0.015,34,0.015,36,2.408,39,4.912,43,2.408,50,2.629,112,1.807,157,2.906,179,2.571,192,2.906,195,3.81,268,2.408,270,2.408,312,4.912,505,2.906,552,3.277,630,2.224,662,3.839,663,3.839,664,3.277,665,5.756,666,3.277,667,4.912,668,3.277,669,4.367,670,6.576,671,5.756,672,3.839,673,5.756,674,3.839,675,3.839,676,3.839,677,3.839,678,3.839,679,3.839,680,3.839,681,3.839]],["title/miscellaneous/variables.html",[491,3.263,630,1.737]],["body/miscellaneous/variables.html",[3,0.032,6,0.032,13,0.374,22,0.021,23,0.195,25,1.661,27,1.077,32,0.964,33,0.004,34,0.004,36,0.49,37,0.591,40,3.222,42,0.535,44,0.667,50,1.639,51,1.812,52,1.661,55,0.051,57,0.591,58,0.667,59,0.667,60,0.273,62,0.591,64,0.591,65,1.073,66,0.535,67,0.591,69,2.351,70,2.465,71,0.591,72,0.667,74,0.667,76,1.073,77,3.13,78,1.474,80,0.591,82,0.667,98,0.591,99,0.667,101,0.49,107,0.667,111,0.345,112,1.126,113,0.368,121,0.453,123,0.453,143,0.535,157,2.761,178,0.591,179,0.392,180,0.667,184,0.821,194,0.667,195,0.453,198,0.535,215,0.591,225,2.376,226,0.42,230,0.889,241,0.667,249,0.667,252,0.667,258,0.667,268,0.49,270,3.03,272,1.501,273,1.221,274,0.49,280,0.591,308,0.591,325,0.667,332,1.073,352,3.114,359,1.661,368,1.21,385,0.591,396,0.667,406,1.474,416,2.761,424,0.591,427,1.474,430,0.535,431,0.971,432,1.812,439,0.667,459,0.667,462,0.591,491,0.591,493,1.661,494,0.667,497,3.222,498,0.667,499,4.016,500,2.897,504,1.661,505,0.591,506,5.166,507,1.661,514,1.661,515,0.667,528,1.661,529,1.661,531,0.667,532,0.667,534,1.21,535,0.667,536,0.667,537,0.667,538,0.667,547,1.661,556,0.667,559,1.661,560,1.661,577,0.667,581,0.667,589,0.667,591,1.661,592,1.661,596,1.661,601,0.667,602,0.667,609,0.667,612,0.667,615,0.667,616,0.667,630,0.453,664,0.667,666,0.667,667,1.21,668,1.21,669,1.21,682,1.418,683,1.947,684,1.947,685,0.781,686,1.418,687,0.781,688,0.781,689,0.781,690,0.781,691,0.781,692,1.418,693,1.418,694,0.781,695,0.781,696,1.418,697,1.947,698,0.781,699,0.781,700,4.57,701,0.781,702,3.648,703,0.781,704,2.393,705,0.781,706,0.781,707,0.781,708,0.781,709,0.781,710,0.781,711,0.781,712,0.781,713,0.781,714,0.781,715,0.781,716,2.393,717,0.781,718,0.781,719,0.781,720,0.781,721,1.947,722,0.781,723,0.781,724,1.418,725,1.418,726,0.781,727,0.781,728,0.781,729,0.781,730,1.418,731,0.781,732,0.781,733,0.781,734,0.781,735,0.781,736,0.781,737,1.418,738,0.781,739,0.781,740,0.781,741,0.781,742,0.781,743,0.781,744,0.781,745,0.781,746,0.781,747,0.781,748,0.781,749,0.781,750,1.947,751,0.781,752,0.781,753,0.781,754,0.781,755,1.418,756,1.947,757,1.418,758,2.393,759,0.781,760,1.418,761,0.781,762,0.781,763,1.418,764,0.781,765,1.418,766,0.781,767,0.781,768,0.781,769,0.781,770,0.781,771,0.781,772,0.781,773,0.781,774,0.781,775,0.781,776,0.781,777,0.781,778,1.947,779,0.781,780,0.781,781,0.781,782,0.781,783,1.418,784,0.781,785,0.781,786,0.781,787,2.393,788,0.781,789,0.781,790,0.781,791,2.393,792,0.781,793,0.781,794,0.781,795,1.418,796,0.781,797,0.781,798,0.781,799,0.781,800,0.781,801,0.781,802,0.781,803,0.781,804,0.781,805,0.781,806,0.781,807,0.781,808,0.781,809,0.781,810,0.781,811,0.781,812,0.781,813,0.781,814,0.781,815,0.781,816,0.781,817,0.781,818,0.781,819,0.781,820,0.781,821,0.781,822,0.781,823,0.781,824,0.781,825,0.781,826,0.781,827,0.781,828,0.781,829,0.781,830,0.781,831,0.781,832,0.781,833,0.781,834,0.781,835,0.781,836,0.781,837,0.781,838,0.781,839,0.781,840,0.781,841,0.781,842,0.781,843,1.947,844,0.781,845,0.781,846,0.781,847,0.781,848,0.781,849,0.781,850,0.781,851,1.418,852,0.781,853,0.781,854,0.781,855,0.781,856,0.781,857,0.781,858,0.781,859,0.781,860,0.781,861,0.781,862,0.781,863,0.781,864,0.781,865,0.781,866,0.781,867,0.781,868,0.781,869,0.781,870,0.781,871,0.781,872,0.781,873,1.418,874,0.781,875,0.781,876,1.418,877,0.781,878,0.781,879,0.781,880,0.781,881,0.781,882,1.947,883,0.781,884,1.418,885,1.418,886,2.393,887,0.781,888,0.781,889,0.781,890,0.781,891,1.947,892,2.393,893,0.781,894,0.781,895,0.781,896,0.781,897,0.781,898,0.781,899,0.781,900,0.781,901,0.781,902,0.781,903,0.781,904,1.947,905,0.781,906,0.781,907,0.781,908,0.781,909,0.781,910,0.781,911,0.781,912,1.418,913,0.781,914,0.781,915,0.781,916,0.781,917,1.947,918,0.781,919,0.781,920,0.781,921,0.781,922,0.781,923,0.781,924,0.781,925,0.781,926,0.781,927,0.781,928,0.781,929,0.781,930,0.781,931,0.781,932,1.947,933,0.781,934,0.781,935,0.781,936,0.781,937,0.781,938,0.781,939,0.781,940,1.418,941,5.323,942,0.781,943,0.781,944,0.781,945,1.418,946,0.781,947,1.418,948,0.781,949,0.781,950,1.418,951,0.781,952,0.781,953,1.418,954,0.781,955,1.418,956,0.781,957,0.781,958,0.781,959,1.418,960,0.781,961,0.781,962,0.781,963,0.781,964,0.781,965,1.947,966,0.781,967,0.781,968,1.947,969,1.947,970,1.947,971,0.781,972,0.781,973,0.781,974,0.781,975,0.781,976,0.781,977,0.781,978,0.781,979,0.781,980,0.781,981,0.781,982,4.075,983,0.781,984,0.781,985,0.781,986,0.781,987,0.781,988,0.781,989,0.781,990,0.781,991,0.781,992,0.781,993,1.947,994,0.781,995,0.781,996,0.781,997,0.781,998,0.781,999,0.781,1000,1.418,1001,1.418,1002,0.781,1003,0.781,1004,0.781,1005,1.418,1006,0.781,1007,0.781,1008,0.781,1009,0.781,1010,0.781,1011,0.781,1012,1.418,1013,0.781,1014,0.781,1015,0.781,1016,0.781,1017,0.781,1018,1.418,1019,3.394,1020,1.418,1021,1.418,1022,0.781,1023,1.947,1024,1.418,1025,0.781,1026,0.781,1027,0.781]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"interfaces/BridgeTransferOptions.html":{},"interfaces/CacheSetOptions.html":{},"classes/Collection.html":{},"interfaces/Color.html":{},"classes/CookieJar.html":{},"interfaces/CreateOptions.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"interfaces/ExtendOptions.html":{},"classes/FetchEvent.html":{},"interfaces/FlyRequest.html":{},"interfaces/FlyRequestInit.html":{},"classes/FormData.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"interfaces/MountInfo.html":{},"classes/Node.html":{},"interfaces/OperationResult.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ReadableStreamController.html":{},"classes/Request.html":{},"interfaces/ResizeOptions.html":{},"classes/Response.html":{},"interfaces/ResponseCacheSetOptions.html":{},"interfaces/ScaleOptions.html":{},"interfaces/StaticServerOptions.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"classes/TimeoutError.html":{},"interfaces/WebpOptions.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":93,"title":{},"body":{"interfaces/Color.html":{},"interfaces/PngOptions.html":{},"interfaces/WebpOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.0",{"_index":90,"title":{},"body":{"interfaces/Color.html":{}}}],["0.3.1",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["0.41.0",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["0.42.0",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["09",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":232,"title":{"interfaces/Metadata-1.html":{}},"body":{"interfaces/JpegOptions.html":{},"interfaces/WebpOptions.html":{},"miscellaneous/enumerations.html":{}}}],["1.0",{"_index":91,"title":{},"body":{"interfaces/Color.html":{}}}],["1.0.0",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":233,"title":{},"body":{"interfaces/JpegOptions.html":{},"interfaces/WebpOptions.html":{},"coverage.html":{}}}],["11",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":539,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["17",{"_index":654,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["19",{"_index":458,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["19/21",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":639,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2/6",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":660,"title":{},"body":{"overview.html":{}}}],["23d4e45",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":94,"title":{},"body":{"interfaces/Color.html":{}}}],["28",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":244,"title":{},"body":{"interfaces/Metadata.html":{},"miscellaneous/enumerations.html":{}}}],["3.8.1",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["3.9.2",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["302",{"_index":401,"title":{},"body":{"classes/Response.html":{}}}],["33",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["3gp",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3gpp",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":246,"title":{},"body":{"interfaces/Metadata.html":{},"miscellaneous/enumerations.html":{}}}],["4/4",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["4:4:4",{"_index":221,"title":{},"body":{"interfaces/JpegOptions.html":{}}}],["5",{"_index":643,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["5.0.1",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":645,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6/6",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["7z",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":648,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["8/10",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":234,"title":{},"body":{"interfaces/JpegOptions.html":{},"interfaces/WebpOptions.html":{},"coverage.html":{}}}],["83",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":334,"title":{},"body":{"interfaces/PngOptions.html":{},"coverage.html":{}}}],["90",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["_data",{"_index":204,"title":{},"body":{"classes/FormData.html":{}}}],["_dom",{"_index":126,"title":{},"body":{"classes/Document.html":{},"classes/Element.html":{},"classes/Node.html":{}}}],["_log",{"_index":591,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_withpar",{"_index":130,"title":{},"body":{"classes/Document.html":{},"classes/Element.html":{},"classes/Node.html":{}}}],["_withparent(nod",{"_index":144,"title":{},"body":{"classes/Document.html":{},"classes/Element.html":{},"classes/Node.html":{}}}],["abov",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accept",{"_index":276,"title":{},"body":{"classes/Middleware.html":{},"interfaces/ProxyOptions.html":{}}}],["access",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessor",{"_index":46,"title":{},"body":{"classes/BodyMixin.html":{},"classes/Document.html":{},"classes/Element.html":{},"classes/Node.html":{},"classes/Request.html":{},"classes/Response.html":{}}}],["ad",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adapt",{"_index":328,"title":{},"body":{"interfaces/PngOptions.html":{}}}],["adaptivefilt",{"_index":326,"title":{},"body":{"interfaces/PngOptions.html":{}}}],["add",{"_index":304,"title":{},"body":{"classes/MiddlewareChain.html":{}}}],["addeventlisten",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["addit",{"_index":678,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["advantag",{"_index":384,"title":{},"body":{"interfaces/ResizeOptions.html":{}}}],["ag",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ai",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algo",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alias",{"_index":662,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowenlarg",{"_index":408,"title":{},"body":{"interfaces/ScaleOptions.html":{}}}],["alpha",{"_index":85,"title":{},"body":{"interfaces/Color.html":{},"interfaces/Metadata.html":{},"interfaces/WebpOptions.html":{}}}],["alphaqu",{"_index":441,"title":{},"body":{"interfaces/WebpOptions.html":{}}}],["api",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":182,"title":{},"body":{"classes/FetchEvent.html":{}}}],["append",{"_index":104,"title":{},"body":{"classes/CookieJar.html":{},"classes/FormData.html":{},"classes/MiddlewareChain.html":{}}}],["append(nam",{"_index":106,"title":{},"body":{"classes/CookieJar.html":{},"classes/FormData.html":{}}}],["appendchild",{"_index":131,"title":{},"body":{"classes/Document.html":{},"classes/Element.html":{},"classes/Node.html":{}}}],["appendchild(html",{"_index":145,"title":{},"body":{"classes/Document.html":{},"classes/Element.html":{},"classes/Node.html":{}}}],["appli",{"_index":108,"title":{},"body":{"classes/CookieJar.html":{}}}],["applic",{"_index":656,"title":{},"body":{"index.html":{}}}],["application/atom+xml",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/java",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/javascript",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/json",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/mac",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/msword",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/octet",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/pdf",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/postscript",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/rss+xml",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/rtf",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.apple.mpegurl",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.googl",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.m",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.oasis.opendocument.graph",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.oasis.opendocument.present",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.oasis.opendocument.spreadsheet",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.oasis.opendocument.text",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.openxmlformat",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.wap.wmlc",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/x",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/xhtml+xml",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/xspf+xml",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/zip",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["archiv",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arg",{"_index":157,"title":{},"body":{"classes/DocumentParser.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["arraybuff",{"_index":42,"title":{},"body":{"classes/BodyMixin.html":{},"interfaces/OperationResult.html":{},"interfaces/ReadableStreamController.html":{},"miscellaneous/variables.html":{}}}],["asf",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aspect",{"_index":420,"title":{},"body":{"interfaces/ScaleOptions.html":{}}}],["assert",{"_index":612,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["assert(assert",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associ",{"_index":82,"title":{},"body":{"classes/Collection.html":{},"miscellaneous/variables.html":{}}}],["asx",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":41,"title":{},"body":{"classes/BodyMixin.html":{},"classes/DocumentParser.html":{},"classes/MiddlewareChain.html":{}}}],["atom",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attach",{"_index":676,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["attempt",{"_index":446,"title":{},"body":{"interfaces/WebpOptions.html":{}}}],["attent",{"_index":653,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["audio/midi",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/ogg",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/x",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automat",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avi",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b",{"_index":86,"title":{},"body":{"interfaces/Color.html":{},"interfaces/Metadata.html":{}}}],["b800a27",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":346,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["background",{"_index":117,"title":{},"body":{"interfaces/CreateOptions.html":{}}}],["band",{"_index":242,"title":{},"body":{"interfaces/Metadata.html":{}}}],["befor",{"_index":350,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["better",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bin",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["binhex40",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blob",{"_index":1,"title":{"classes/Blob.html":{}},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["blobpart",{"_index":18,"title":{},"body":{"classes/Blob.html":{},"miscellaneous/typealiases.html":{}}}],["blobpropertybag",{"_index":20,"title":{},"body":{"classes/Blob.html":{}}}],["blue",{"_index":92,"title":{},"body":{"interfaces/Color.html":{}}}],["bmp",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bodi",{"_index":38,"title":{},"body":{"classes/BodyMixin.html":{},"classes/Request.html":{},"classes/Response.html":{}}}],["bodymixin",{"_index":35,"title":{"classes/BodyMixin.html":{}},"body":{"classes/BodyMixin.html":{},"coverage.html":{}}}],["bodysourc",{"_index":39,"title":{},"body":{"classes/BodyMixin.html":{},"miscellaneous/typealiases.html":{}}}],["bodyus",{"_index":47,"title":{},"body":{"classes/BodyMixin.html":{}}}],["boolean",{"_index":60,"title":{},"body":{"interfaces/BridgeTransferOptions.html":{},"interfaces/CacheSetOptions.html":{},"classes/FetchEvent.html":{},"classes/FormData.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ResizeOptions.html":{},"classes/Response.html":{},"interfaces/ScaleOptions.html":{},"interfaces/WebpOptions.html":{},"miscellaneous/variables.html":{}}}],["bottom",{"_index":173,"title":{},"body":{"interfaces/ExtendOptions.html":{}}}],["bridg",{"_index":506,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bridge.dispatch(\"digesthash",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bridge.dispatch(\"fly.data.dropcollect",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bridge.dispatchsync(\"digesthashasync",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bridgetransferopt",{"_index":56,"title":{"interfaces/BridgeTransferOptions.html":{}},"body":{"interfaces/BridgeTransferOptions.html":{},"coverage.html":{}}}],["bufferfromstream",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["buffersourc",{"_index":673,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["buildnext",{"_index":294,"title":{},"body":{"classes/MiddlewareChain.html":{}}}],["buildnext(mw",{"_index":297,"title":{},"body":{"classes/MiddlewareChain.html":{}}}],["buildproxyrequest",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["bump",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["byte",{"_index":9,"title":{},"body":{"classes/Blob.html":{}}}],["bytelengthqueuingstrategi",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["byteuppercas",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["ca",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cach",{"_index":270,"title":{},"body":{"interfaces/Metadata-1.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cache.getstring(\"test",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache.global.del(\"key",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache.global.purgetag(\"key",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache.set(\"test",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cachedrespons",{"_index":665,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["cacheresult",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["cachesetopt",{"_index":61,"title":{"interfaces/CacheSetOptions.html":{}},"body":{"interfaces/CacheSetOptions.html":{},"interfaces/ResponseCacheSetOptions.html":{},"coverage.html":{}}}],["callback",{"_index":158,"title":{},"body":{"classes/DocumentParser.html":{},"classes/FetchEvent.html":{}}}],["callsitetostr",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["cco",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["center",{"_index":323,"title":{},"body":{"interfaces/OverlayOptions.html":{},"miscellaneous/enumerations.html":{}}}],["centr",{"_index":636,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cert",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chain",{"_index":290,"title":{},"body":{"classes/MiddlewareChain.html":{}}}],["chang",{"_index":419,"title":{},"body":{"interfaces/ScaleOptions.html":{},"changelog.html":{}}}],["changelog",{"_index":448,"title":{"changelog.html":{}},"body":{}}],["channel",{"_index":89,"title":{},"body":{"interfaces/Color.html":{},"interfaces/CreateOptions.html":{},"interfaces/Metadata.html":{}}}],["children",{"_index":313,"title":{},"body":{"classes/Node.html":{}}}],["chroma",{"_index":223,"title":{},"body":{"interfaces/JpegOptions.html":{}}}],["chromasubsampl",{"_index":217,"title":{},"body":{"interfaces/JpegOptions.html":{}}}],["chunk",{"_index":368,"title":{},"body":{"interfaces/ReadableStreamController.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":0,"title":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"classes/Collection.html":{},"classes/CookieJar.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"classes/FetchEvent.html":{},"classes/FormData.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"classes/Node.html":{},"classes/Request.html":{},"classes/Response.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"classes/TimeoutError.html":{}},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"classes/Collection.html":{},"classes/CookieJar.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"classes/FetchEvent.html":{},"classes/FormData.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"classes/Node.html":{},"classes/Request.html":{},"classes/Response.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"classes/TimeoutError.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clearinterv",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["cleartimeout",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["clone",{"_index":373,"title":{},"body":{"classes/Request.html":{},"classes/Response.html":{}}}],["clonecallsit",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":365,"title":{},"body":{"interfaces/ReadableStreamController.html":{}}}],["cmyk",{"_index":247,"title":{},"body":{"interfaces/Metadata.html":{}}}],["cocoa",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collect",{"_index":66,"title":{"classes/Collection.html":{}},"body":{"classes/Collection.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["collection(nam",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":83,"title":{"interfaces/Color.html":{}},"body":{"interfaces/Color.html":{},"interfaces/CreateOptions.html":{},"coverage.html":{}}}],["colour",{"_index":262,"title":{},"body":{"interfaces/Metadata.html":{}}}],["comment",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commit",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["compon",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compress",{"_index":332,"title":{},"body":{"interfaces/PngOptions.html":{},"interfaces/WebpOptions.html":{},"miscellaneous/variables.html":{}}}],["compressionlevel",{"_index":327,"title":{},"body":{"interfaces/PngOptions.html":{}}}],["concaten",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["conflict",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conform",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consist",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consol",{"_index":500,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":359,"title":{},"body":{"interfaces/ProxyOptions.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":16,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"classes/Collection.html":{},"classes/CookieJar.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"classes/FetchEvent.html":{},"classes/FormData.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"classes/Node.html":{},"classes/Request.html":{},"classes/Response.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{}}}],["constructor(blobpart",{"_index":17,"title":{},"body":{"classes/Blob.html":{}}}],["constructor(bodi",{"_index":399,"title":{},"body":{"classes/Response.html":{}}}],["constructor(dom",{"_index":135,"title":{},"body":{"classes/Document.html":{},"classes/Element.html":{},"classes/Node.html":{}}}],["constructor(encod",{"_index":434,"title":{},"body":{"classes/TextDecoder.html":{}}}],["constructor(input",{"_index":374,"title":{},"body":{"classes/Request.html":{}}}],["constructor(nam",{"_index":73,"title":{},"body":{"classes/Collection.html":{}}}],["constructor(obj",{"_index":48,"title":{},"body":{"classes/BodyMixin.html":{}}}],["constructor(par",{"_index":105,"title":{},"body":{"classes/CookieJar.html":{}}}],["constructor(prop",{"_index":281,"title":{},"body":{"classes/Middleware.html":{}}}],["constructor(set",{"_index":305,"title":{},"body":{"classes/MiddlewareSettings.html":{}}}],["constructor(typ",{"_index":187,"title":{},"body":{"classes/FetchEvent.html":{}}}],["contain",{"_index":417,"title":{},"body":{"interfaces/ScaleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["contenttyp",{"_index":30,"title":{},"body":{"classes/Blob.html":{}}}],["control",{"_index":426,"title":{},"body":{"interfaces/StaticServerOptions.html":{}}}],["convent",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["cooki",{"_index":101,"title":{},"body":{"classes/CookieJar.html":{},"classes/Request.html":{},"classes/Response.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cookieattributenam",{"_index":504,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cookiejar",{"_index":97,"title":{"classes/CookieJar.html":{}},"body":{"classes/CookieJar.html":{},"classes/Request.html":{},"classes/Response.html":{},"coverage.html":{}}}],["count",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countqueuingstrategi",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countreset",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cover",{"_index":635,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["coverag",{"_index":481,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createel",{"_index":127,"title":{},"body":{"classes/Document.html":{}}}],["createelement(tagnam",{"_index":137,"title":{},"body":{"classes/Document.html":{}}}],["createopt",{"_index":116,"title":{"interfaces/CreateOptions.html":{}},"body":{"interfaces/CreateOptions.html":{},"coverage.html":{}}}],["credenti",{"_index":370,"title":{},"body":{"classes/Request.html":{}}}],["crop",{"_index":407,"title":{},"body":{"interfaces/ScaleOptions.html":{},"changelog.html":{}}}],["crt",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto",{"_index":507,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cryptodata",{"_index":667,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["css",{"_index":615,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cubic",{"_index":650,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["currentpo",{"_index":293,"title":{},"body":{"classes/MiddlewareChain.html":{}}}],["cutout",{"_index":318,"title":{},"body":{"interfaces/OverlayOptions.html":{}}}],["data",{"_index":77,"title":{},"body":{"classes/Collection.html":{},"interfaces/OperationResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deb",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug(...arg",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug(fmt",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decod",{"_index":433,"title":{},"body":{"classes/TextDecoder.html":{}}}],["decode(input",{"_index":435,"title":{},"body":{"classes/TextDecoder.html":{}}}],["default",{"_index":225,"title":{},"body":{"interfaces/JpegOptions.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ResizeOptions.html":{},"classes/Response.html":{},"interfaces/ScaleOptions.html":{},"interfaces/WebpOptions.html":{},"miscellaneous/variables.html":{}}}],["default_bridge_transfer_opt",{"_index":493,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultskiphead",{"_index":547,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["definit",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["del",{"_index":71,"title":{},"body":{"classes/Collection.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["del(key",{"_index":75,"title":{},"body":{"classes/Collection.html":{}}}],["del/purg",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delet",{"_index":76,"title":{},"body":{"classes/Collection.html":{},"classes/FormData.html":{},"miscellaneous/variables.html":{}}}],["delete(nam",{"_index":209,"title":{},"body":{"classes/FormData.html":{}}}],["delici",{"_index":100,"title":{},"body":{"classes/CookieJar.html":{}}}],["densiti",{"_index":236,"title":{},"body":{"interfaces/Metadata.html":{},"interfaces/OverlayOptions.html":{}}}],["depend",{"_index":610,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deprecatedproxi",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["der",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["descript",{"_index":68,"title":{},"body":{"classes/Collection.html":{},"classes/CookieJar.html":{},"classes/FetchEvent.html":{},"interfaces/FlyRequest.html":{},"classes/FormData.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata-1.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"interfaces/MountInfo.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"classes/Request.html":{},"interfaces/ResizeOptions.html":{},"classes/Response.html":{},"interfaces/ScaleOptions.html":{},"interfaces/StaticServerOptions.html":{},"interfaces/WebpOptions.html":{}}}],["descriptor",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diff",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["digest(algo",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["digestsync(algo",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dimens",{"_index":412,"title":{},"body":{"interfaces/ScaleOptions.html":{}}}],["dir",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirxml",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dispatchev",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["dll",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dmg",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doc",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document",{"_index":120,"title":{"classes/Document.html":{}},"body":{"classes/Document.html":{},"changelog.html":{},"coverage.html":{}}}],["documentel",{"_index":134,"title":{},"body":{"classes/Document.html":{}}}],["documentpars",{"_index":150,"title":{"classes/DocumentParser.html":{}},"body":{"classes/DocumentParser.html":{},"coverage.html":{}}}],["docx",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":136,"title":{},"body":{"classes/Document.html":{},"classes/Element.html":{},"classes/Node.html":{}}}],["domain",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["domutil",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["dpi",{"_index":251,"title":{},"body":{"interfaces/Metadata.html":{}}}],["dropcollection(nam",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.g",{"_index":243,"title":{},"body":{"interfaces/Metadata.html":{}}}],["each",{"_index":347,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["ear",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["earth.kml+xml",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["earth.kmz",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["east",{"_index":638,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["edg",{"_index":655,"title":{},"body":{"index.html":{}}}],["elaps",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elem",{"_index":154,"title":{},"body":{"classes/DocumentParser.html":{}}}],["element",{"_index":139,"title":{"classes/Element.html":{}},"body":{"classes/Document.html":{},"classes/Element.html":{},"classes/Node.html":{},"coverage.html":{}}}],["embed",{"_index":256,"title":{},"body":{"interfaces/Metadata.html":{}}}],["emitt",{"_index":528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["encod",{"_index":432,"title":{},"body":{"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"miscellaneous/variables.html":{}}}],["encode(input",{"_index":437,"title":{},"body":{"classes/TextEncoder.html":{}}}],["encoding.t",{"_index":431,"title":{},"body":{"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":29,"title":{},"body":{"classes/Blob.html":{}}}],["enqueu",{"_index":366,"title":{},"body":{"interfaces/ReadableStreamController.html":{}}}],["enqueue(chunk",{"_index":367,"title":{},"body":{"interfaces/ReadableStreamController.html":{}}}],["ensurefetchev",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["entir",{"_index":349,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["entri",{"_index":205,"title":{},"body":{"classes/FormData.html":{}}}],["entropi",{"_index":652,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumer",{"_index":631,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":657,"title":{},"body":{"index.html":{}}}],["eot",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ep",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errmiddlewarenotpromis",{"_index":596,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":439,"title":{},"body":{"classes/TimeoutError.html":{},"miscellaneous/variables.html":{}}}],["error(\"middlewar",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(\"onli",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error().stack.match(/[^\\r\\n]+/g",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(...arg",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(err",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(fmt",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":180,"title":{},"body":{"classes/FetchEvent.html":{},"miscellaneous/variables.html":{}}}],["eventemitt",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter2",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["eventu",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evict",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ex",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exactli",{"_index":418,"title":{},"body":{"interfaces/ScaleOptions.html":{}}}],["exampl",{"_index":5,"title":{},"body":{"classes/Blob.html":{},"classes/CookieJar.html":{},"classes/FetchEvent.html":{},"classes/FormData.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"interfaces/ProxyOptions.html":{},"classes/Request.html":{}}}],["excel",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exception(...arg",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execut",{"_index":291,"title":{},"body":{"classes/MiddlewareChain.html":{}}}],["exif",{"_index":260,"title":{},"body":{"interfaces/Metadata.html":{}}}],["expect",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expir",{"_index":534,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extend",{"_index":122,"title":{},"body":{"classes/Document.html":{},"classes/Element.html":{},"interfaces/FlyRequest.html":{},"interfaces/FlyRequestInit.html":{},"classes/Request.html":{},"classes/Response.html":{},"interfaces/ResponseCacheSetOptions.html":{},"interfaces/ScaleOptions.html":{},"classes/TimeoutError.html":{}}}],["extendopt",{"_index":172,"title":{"interfaces/ExtendOptions.html":{}},"body":{"interfaces/ExtendOptions.html":{},"coverage.html":{}}}],["fals",{"_index":230,"title":{},"body":{"interfaces/JpegOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ScaleOptions.html":{},"miscellaneous/variables.html":{}}}],["fastshrinkonload",{"_index":380,"title":{},"body":{"interfaces/ResizeOptions.html":{}}}],["featur",{"_index":388,"title":{},"body":{"interfaces/ResizeOptions.html":{},"changelog.html":{}}}],["fetch",{"_index":179,"title":{},"body":{"classes/FetchEvent.html":{},"interfaces/FlyRequest.html":{},"classes/FormData.html":{},"interfaces/MountInfo.html":{},"classes/Response.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fetchev",{"_index":177,"title":{"classes/FetchEvent.html":{}},"body":{"classes/FetchEvent.html":{},"coverage.html":{}}}],["fetcheventbound",{"_index":559,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetchfunct",{"_index":312,"title":{},"body":{"interfaces/MountInfo.html":{},"miscellaneous/typealiases.html":{}}}],["fetchgener",{"_index":670,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["file",{"_index":3,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"interfaces/BridgeTransferOptions.html":{},"interfaces/CacheSetOptions.html":{},"classes/Collection.html":{},"interfaces/Color.html":{},"classes/CookieJar.html":{},"interfaces/CreateOptions.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"interfaces/ExtendOptions.html":{},"classes/FetchEvent.html":{},"interfaces/FlyRequest.html":{},"interfaces/FlyRequestInit.html":{},"classes/FormData.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"interfaces/MountInfo.html":{},"classes/Node.html":{},"interfaces/OperationResult.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ReadableStreamController.html":{},"classes/Request.html":{},"interfaces/ResizeOptions.html":{},"classes/Response.html":{},"interfaces/ResponseCacheSetOptions.html":{},"interfaces/ScaleOptions.html":{},"interfaces/StaticServerOptions.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"classes/TimeoutError.html":{},"interfaces/WebpOptions.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fill",{"_index":587,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["filter",{"_index":330,"title":{},"body":{"interfaces/PngOptions.html":{}}}],["fire",{"_index":181,"title":{},"body":{"classes/FetchEvent.html":{}}}],["firefetchev",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["fit",{"_index":409,"title":{},"body":{"interfaces/ScaleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["flash",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fli",{"_index":497,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["flv",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fly.log(\"debug",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fly.log(\"error",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fly.log(\"info",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fly.log(\"warn",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fly/cach",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fly/cache/glob",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fly/cache/respons",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fly/v8env",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["flyfetchhandl",{"_index":560,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["flyinit",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["flylog",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["flylog(\"debug",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flylog(\"error",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flylog(\"info",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flylog(\"warn",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flyrequest",{"_index":191,"title":{"interfaces/FlyRequest.html":{}},"body":{"interfaces/FlyRequest.html":{},"coverage.html":{}}}],["flyrequestinit",{"_index":197,"title":{"interfaces/FlyRequestInit.html":{}},"body":{"interfaces/FlyRequestInit.html":{},"coverage.html":{}}}],["fn",{"_index":190,"title":{},"body":{"classes/FetchEvent.html":{},"classes/Middleware.html":{}}}],["font/woff",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["font/woff2",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fontobject",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forc",{"_index":218,"title":{},"body":{"interfaces/JpegOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/WebpOptions.html":{}}}],["format",{"_index":237,"title":{},"body":{"interfaces/Metadata.html":{},"interfaces/WebpOptions.html":{}}}],["format(fmt",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formdata",{"_index":43,"title":{"classes/FormData.html":{}},"body":{"classes/BodyMixin.html":{},"classes/FormData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["forward",{"_index":340,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["forwardhosthead",{"_index":338,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["frequent",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":195,"title":{},"body":{"interfaces/FlyRequest.html":{},"classes/Middleware.html":{},"interfaces/MountInfo.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["g",{"_index":87,"title":{},"body":{"interfaces/Color.html":{}}}],["gener",{"_index":677,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["get",{"_index":115,"title":{"changelog.html":{},"index.html":{}},"body":{"classes/CookieJar.html":{}}}],["get(key",{"_index":79,"title":{},"body":{"classes/Collection.html":{}}}],["get(nam",{"_index":114,"title":{},"body":{"classes/CookieJar.html":{},"classes/FormData.html":{},"classes/MiddlewareSettings.html":{}}}],["getal",{"_index":206,"title":{},"body":{"classes/FormData.html":{}}}],["getall(nam",{"_index":211,"title":{},"body":{"classes/FormData.html":{}}}],["getattribut",{"_index":159,"title":{},"body":{"classes/Element.html":{}}}],["getattribute(nam",{"_index":165,"title":{},"body":{"classes/Element.html":{}}}],["getbodi",{"_index":53,"title":{},"body":{"classes/BodyMixin.html":{}}}],["getbodyus",{"_index":54,"title":{},"body":{"classes/BodyMixin.html":{}}}],["getchildren",{"_index":314,"title":{},"body":{"classes/Node.html":{}}}],["getcooki",{"_index":376,"title":{},"body":{"classes/Request.html":{},"classes/Response.html":{}}}],["getdocumentel",{"_index":149,"title":{},"body":{"classes/Document.html":{}}}],["getelementbyid",{"_index":128,"title":{},"body":{"classes/Document.html":{}}}],["getelementbyid(id",{"_index":140,"title":{},"body":{"classes/Document.html":{}}}],["getid",{"_index":168,"title":{},"body":{"classes/Element.html":{}}}],["getinnerhtml",{"_index":170,"title":{},"body":{"classes/Element.html":{}}}],["getmeta",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["getmulti",{"_index":535,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmultistr",{"_index":536,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getouterhtml",{"_index":171,"title":{},"body":{"classes/Element.html":{}}}],["getrandomvalues(typedarray",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getstr",{"_index":537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettextcont",{"_index":169,"title":{},"body":{"classes/Element.html":{}}}],["gif",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["global",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graviti",{"_index":319,"title":{},"body":{"interfaces/OverlayOptions.html":{},"miscellaneous/enumerations.html":{}}}],["greater",{"_index":383,"title":{},"body":{"interfaces/ResizeOptions.html":{}}}],["green",{"_index":95,"title":{},"body":{"interfaces/Color.html":{}}}],["group",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["groupcollaps",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["groupend",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guidelin",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["handlefetch",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["handler",{"_index":310,"title":{},"body":{"interfaces/MountInfo.html":{}}}],["has(nam",{"_index":212,"title":{},"body":{"classes/FormData.html":{}}}],["hasalpha",{"_index":238,"title":{},"body":{"interfaces/Metadata.html":{}}}],["hashdata",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["hasprofil",{"_index":239,"title":{},"body":{"interfaces/Metadata.html":{}}}],["header",{"_index":261,"title":{},"body":{"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"interfaces/ProxyOptions.html":{},"classes/Request.html":{},"classes/Response.html":{},"coverage.html":{}}}],["headersiter",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["height",{"_index":118,"title":{},"body":{"interfaces/CreateOptions.html":{},"interfaces/Metadata.html":{},"interfaces/ScaleOptions.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["here",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hex",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["high",{"_index":259,"title":{},"body":{"interfaces/Metadata.html":{}}}],["host",{"_index":341,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["hqx",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["htc",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["htm",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":143,"title":{},"body":{"classes/Document.html":{},"classes/Element.html":{},"classes/Node.html":{},"miscellaneous/variables.html":{}}}],["htmlparser.writablestream",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["htmlparser2",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["http",{"_index":184,"title":{},"body":{"classes/FetchEvent.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/Request.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["httponli",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fly.io/path1/to/document.html",{"_index":358,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["https://github.com/definitelytyped/definitelytyped/blob/master/types/node/v4/index.d.ts#l15",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icc",{"_index":257,"title":{},"body":{"interfaces/Metadata.html":{}}}],["ico",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":141,"title":{},"body":{"classes/Document.html":{},"classes/Element.html":{}}}],["identifi",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["ignoreaspectratio",{"_index":410,"title":{},"body":{"interfaces/ScaleOptions.html":{}}}],["imag",{"_index":379,"title":{},"body":{"interfaces/ResizeOptions.html":{},"interfaces/ScaleOptions.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["image.crop",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["image.scal",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["image/gif",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/jpeg",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/png",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/svg+xml",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/tiff",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/vnd.wap.wbmp",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/webp",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/x",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imagemetadata",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["imageoper",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["imagetobuff",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["img",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":37,"title":{},"body":{"classes/BodyMixin.html":{},"classes/Middleware.html":{},"miscellaneous/variables.html":{}}}],["implementation/lib/read",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inch",{"_index":250,"title":{},"body":{"interfaces/Metadata.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"interfaces/BridgeTransferOptions.html":{},"interfaces/CacheSetOptions.html":{},"classes/Collection.html":{},"interfaces/Color.html":{},"classes/CookieJar.html":{},"interfaces/CreateOptions.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"interfaces/ExtendOptions.html":{},"classes/FetchEvent.html":{},"interfaces/FlyRequest.html":{},"interfaces/FlyRequestInit.html":{},"classes/FormData.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"interfaces/MountInfo.html":{},"classes/Node.html":{},"interfaces/OperationResult.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ReadableStreamController.html":{},"classes/Request.html":{},"interfaces/ResizeOptions.html":{},"classes/Response.html":{},"interfaces/ResponseCacheSetOptions.html":{},"interfaces/ScaleOptions.html":{},"interfaces/StaticServerOptions.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"interfaces/WebpOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":253,"title":{},"body":{"interfaces/Metadata.html":{}}}],["infer",{"_index":344,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"interfaces/BridgeTransferOptions.html":{},"interfaces/CacheSetOptions.html":{},"classes/Collection.html":{},"interfaces/Color.html":{},"classes/CookieJar.html":{},"interfaces/CreateOptions.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"interfaces/ExtendOptions.html":{},"classes/FetchEvent.html":{},"interfaces/FlyRequest.html":{},"interfaces/FlyRequestInit.html":{},"classes/FormData.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"interfaces/MountInfo.html":{},"classes/Node.html":{},"interfaces/OperationResult.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ReadableStreamController.html":{},"classes/Request.html":{},"interfaces/ResizeOptions.html":{},"classes/Response.html":{},"interfaces/ResponseCacheSetOptions.html":{},"interfaces/ScaleOptions.html":{},"interfaces/StaticServerOptions.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"classes/TimeoutError.html":{},"interfaces/WebpOptions.html":{},"miscellaneous/typealiases.html":{}}}],["info(...arg",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info(fmt",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["init",{"_index":188,"title":{},"body":{"classes/FetchEvent.html":{},"classes/Request.html":{},"classes/Response.html":{}}}],["initbridg",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["innerhtml",{"_index":163,"title":{},"body":{"classes/Element.html":{}}}],["input",{"_index":375,"title":{},"body":{"classes/Request.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"interfaces/WebpOptions.html":{}}}],["instanc",{"_index":286,"title":{},"body":{"classes/Middleware.html":{}}}],["instanceof",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["integ",{"_index":231,"title":{},"body":{"interfaces/JpegOptions.html":{},"interfaces/WebpOptions.html":{}}}],["interfac",{"_index":55,"title":{"interfaces/BridgeTransferOptions.html":{},"interfaces/CacheSetOptions.html":{},"interfaces/Color.html":{},"interfaces/CreateOptions.html":{},"interfaces/ExtendOptions.html":{},"interfaces/FlyRequest.html":{},"interfaces/FlyRequestInit.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"interfaces/MountInfo.html":{},"interfaces/OperationResult.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ReadableStreamController.html":{},"interfaces/ResizeOptions.html":{},"interfaces/ResponseCacheSetOptions.html":{},"interfaces/ScaleOptions.html":{},"interfaces/StaticServerOptions.html":{},"interfaces/WebpOptions.html":{}},"body":{"interfaces/BridgeTransferOptions.html":{},"interfaces/CacheSetOptions.html":{},"interfaces/Color.html":{},"interfaces/CreateOptions.html":{},"interfaces/ExtendOptions.html":{},"interfaces/FlyRequest.html":{},"interfaces/FlyRequestInit.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"interfaces/MountInfo.html":{},"interfaces/OperationResult.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ReadableStreamController.html":{},"interfaces/ResizeOptions.html":{},"interfaces/ResponseCacheSetOptions.html":{},"interfaces/ScaleOptions.html":{},"interfaces/StaticServerOptions.html":{},"interfaces/WebpOptions.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["interlac",{"_index":228,"title":{},"body":{"interfaces/JpegOptions.html":{},"interfaces/PngOptions.html":{}}}],["interpret",{"_index":263,"title":{},"body":{"interfaces/Metadata.html":{}}}],["invalid",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalidresponsetyp",{"_index":529,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isflystream",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["iso",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iterableiter",{"_index":210,"title":{},"body":{"classes/FormData.html":{}}}],["jad",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jar",{"_index":99,"title":{},"body":{"classes/CookieJar.html":{},"miscellaneous/variables.html":{}}}],["jardiff",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["java",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jng",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jnlp",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jpeg",{"_index":215,"title":{},"body":{"interfaces/JpegOptions.html":{},"interfaces/ResizeOptions.html":{},"miscellaneous/variables.html":{}}}],["jpegopt",{"_index":214,"title":{"interfaces/JpegOptions.html":{}},"body":{"interfaces/JpegOptions.html":{},"coverage.html":{}}}],["jpg",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":44,"title":{},"body":{"classes/BodyMixin.html":{},"miscellaneous/variables.html":{}}}],["junk",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kar",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kernel",{"_index":381,"title":{},"body":{"interfaces/ResizeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["key",{"_index":69,"title":{},"body":{"classes/Collection.html":{},"classes/FormData.html":{},"miscellaneous/variables.html":{}}}],["key/valu",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kml",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kmz",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lab",{"_index":265,"title":{},"body":{"interfaces/Metadata.html":{}}}],["lanczos2",{"_index":651,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lanczos3",{"_index":394,"title":{},"body":{"interfaces/ResizeOptions.html":{},"miscellaneous/enumerations.html":{}}}],["larger",{"_index":413,"title":{},"body":{"interfaces/ScaleOptions.html":{}}}],["lastnextfunc",{"_index":295,"title":{},"body":{"classes/MiddlewareChain.html":{}}}],["layer",{"_index":444,"title":{},"body":{"interfaces/WebpOptions.html":{}}}],["lead",{"_index":389,"title":{},"body":{"interfaces/ResizeOptions.html":{}}}],["left",{"_index":174,"title":{},"body":{"interfaces/ExtendOptions.html":{},"interfaces/OverlayOptions.html":{}}}],["level",{"_index":333,"title":{},"body":{"interfaces/PngOptions.html":{}}}],["lib.dom",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkcod",{"_index":110,"title":{},"body":{"classes/CookieJar.html":{}}}],["lite",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["liter",{"_index":272,"title":{},"body":{"interfaces/Metadata-1.html":{},"classes/MiddlewareSettings.html":{},"interfaces/ProxyOptions.html":{},"interfaces/StaticServerOptions.html":{},"miscellaneous/variables.html":{}}}],["live",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load",{"_index":387,"title":{},"body":{"interfaces/ResizeOptions.html":{}}}],["log",{"_index":449,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["log(...arg",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":592,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":679,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lossless",{"_index":442,"title":{},"body":{"interfaces/WebpOptions.html":{}}}],["m3u8",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m4a",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m4v",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":357,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["makeself",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manag",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map",{"_index":208,"title":{},"body":{"classes/FormData.html":{},"interfaces/MountInfo.html":{}}}],["mapevalorigin",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["mapsourceposit",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["marktimelin",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":34,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"interfaces/BridgeTransferOptions.html":{},"interfaces/CacheSetOptions.html":{},"classes/Collection.html":{},"interfaces/Color.html":{},"classes/CookieJar.html":{},"interfaces/CreateOptions.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"interfaces/ExtendOptions.html":{},"classes/FetchEvent.html":{},"interfaces/FlyRequest.html":{},"interfaces/FlyRequestInit.html":{},"classes/FormData.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"interfaces/MountInfo.html":{},"classes/Node.html":{},"interfaces/OperationResult.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ReadableStreamController.html":{},"classes/Request.html":{},"interfaces/ResizeOptions.html":{},"classes/Response.html":{},"interfaces/ResponseCacheSetOptions.html":{},"interfaces/ScaleOptions.html":{},"interfaces/StaticServerOptions.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"classes/TimeoutError.html":{},"interfaces/WebpOptions.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memori",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merg",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":235,"title":{"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{}},"body":{"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"interfaces/OperationResult.html":{},"coverage.html":{}}}],["method",{"_index":14,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"classes/Collection.html":{},"classes/CookieJar.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"classes/FetchEvent.html":{},"classes/FormData.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"classes/Node.html":{},"interfaces/ReadableStreamController.html":{},"classes/Request.html":{},"classes/Response.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{}}}],["mid",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["middlewar",{"_index":273,"title":{"classes/Middleware.html":{}},"body":{"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["middlewarechain",{"_index":289,"title":{"classes/MiddlewareChain.html":{}},"body":{"classes/MiddlewareChain.html":{},"coverage.html":{}}}],["middlewareset",{"_index":283,"title":{"classes/MiddlewareSettings.html":{}},"body":{"classes/Middleware.html":{},"classes/MiddlewareSettings.html":{},"coverage.html":{}}}],["midi",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrat",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mimetyp",{"_index":427,"title":{},"body":{"interfaces/StaticServerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["miscellan",{"_index":630,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mml",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mng",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":371,"title":{},"body":{"classes/Request.html":{},"interfaces/WebpOptions.html":{}}}],["modif",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modul",{"_index":658,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moir",{"_index":391,"title":{},"body":{"interfaces/ResizeOptions.html":{}}}],["mount",{"_index":309,"title":{},"body":{"interfaces/MountInfo.html":{},"coverage.html":{}}}],["mountinfo",{"_index":306,"title":{"interfaces/MountInfo.html":{}},"body":{"interfaces/MountInfo.html":{},"coverage.html":{}}}],["mov",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mp3",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mp4",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mpeg",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mpg",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ms",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msi",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msisindependentlycompos",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msm",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msp",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msvideo",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mw",{"_index":287,"title":{},"body":{"classes/Middleware.html":{},"classes/MiddlewareChain.html":{}}}],["name",{"_index":23,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"classes/Collection.html":{},"classes/CookieJar.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"classes/FetchEvent.html":{},"classes/FormData.html":{},"interfaces/Metadata.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"classes/Node.html":{},"interfaces/ReadableStreamController.html":{},"classes/Request.html":{},"classes/Response.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"miscellaneous/variables.html":{}}}],["near_lossless",{"_index":447,"title":{},"body":{"interfaces/WebpOptions.html":{}}}],["nearest",{"_index":649,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nearlossless",{"_index":443,"title":{},"body":{"interfaces/WebpOptions.html":{}}}],["necessari",{"_index":422,"title":{},"body":{"interfaces/ScaleOptions.html":{}}}],["need",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":416,"title":{},"body":{"interfaces/ScaleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newarr",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next",{"_index":278,"title":{},"body":{"classes/Middleware.html":{},"classes/MiddlewareChain.html":{}}}],["node",{"_index":123,"title":{"classes/Node.html":{}},"body":{"classes/Document.html":{},"classes/Element.html":{},"classes/Node.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noop",{"_index":499,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["normalizemethod",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["normalizerequest",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["normalizeurl",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["north",{"_index":637,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["northeast",{"_index":642,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["northwest",{"_index":647,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notabl",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":459,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["notifi",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":51,"title":{},"body":{"classes/BodyMixin.html":{},"classes/FormData.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":26,"title":{},"body":{"classes/Blob.html":{},"interfaces/CacheSetOptions.html":{},"interfaces/Color.html":{},"interfaces/CreateOptions.html":{},"interfaces/ExtendOptions.html":{},"interfaces/FlyRequestInit.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"classes/MiddlewareChain.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"classes/Response.html":{},"interfaces/WebpOptions.html":{}}}],["obj",{"_index":49,"title":{},"body":{"classes/BodyMixin.html":{},"classes/Collection.html":{}}}],["object",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["od",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["odg",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["odp",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["odt",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officedocument.presentationml.present",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officedocument.spreadsheetml.sheet",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officedocument.wordprocessingml.docu",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ogg",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok",{"_index":396,"title":{},"body":{"classes/Response.html":{},"miscellaneous/variables.html":{}}}],["onel",{"_index":151,"title":{},"body":{"classes/DocumentParser.html":{}}}],["onelement(elem",{"_index":153,"title":{},"body":{"classes/DocumentParser.html":{}}}],["onlyifempti",{"_index":63,"title":{},"body":{"interfaces/CacheSetOptions.html":{}}}],["open",{"_index":74,"title":{},"body":{"classes/Collection.html":{},"miscellaneous/variables.html":{}}}],["oper",{"_index":288,"title":{},"body":{"classes/Middleware.html":{}}}],["operationresult",{"_index":316,"title":{"interfaces/OperationResult.html":{}},"body":{"interfaces/OperationResult.html":{},"coverage.html":{}}}],["opt",{"_index":360,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["option",{"_index":19,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"interfaces/BridgeTransferOptions.html":{},"interfaces/CacheSetOptions.html":{},"classes/Collection.html":{},"classes/CookieJar.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"interfaces/ExtendOptions.html":{},"classes/FetchEvent.html":{},"interfaces/FlyRequest.html":{},"interfaces/FlyRequestInit.html":{},"classes/FormData.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"classes/Node.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ReadableStreamController.html":{},"classes/Request.html":{},"interfaces/ResizeOptions.html":{},"classes/Response.html":{},"interfaces/ResponseCacheSetOptions.html":{},"interfaces/ScaleOptions.html":{},"interfaces/StaticServerOptions.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"interfaces/WebpOptions.html":{}}}],["order",{"_index":292,"title":{},"body":{"classes/MiddlewareChain.html":{}}}],["orient",{"_index":240,"title":{},"body":{"interfaces/Metadata.html":{}}}],["origin",{"_index":342,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["origin(\"https://somehostname.com/path2/to/document.html",{"_index":363,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["originalpositionfor",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["otherwis",{"_index":445,"title":{},"body":{"interfaces/WebpOptions.html":{}}}],["out",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["outerhtml",{"_index":164,"title":{},"body":{"classes/Element.html":{}}}],["output",{"_index":216,"title":{},"body":{"interfaces/JpegOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/WebpOptions.html":{}}}],["overlay",{"_index":322,"title":{},"body":{"interfaces/OverlayOptions.html":{}}}],["overlayopt",{"_index":317,"title":{"interfaces/OverlayOptions.html":{}},"body":{"interfaces/OverlayOptions.html":{},"coverage.html":{}}}],["overview",{"_index":659,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":462,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paramet",{"_index":21,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"classes/Collection.html":{},"classes/CookieJar.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"classes/FetchEvent.html":{},"classes/FormData.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"classes/Node.html":{},"interfaces/ReadableStreamController.html":{},"classes/Request.html":{},"classes/Response.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{}}}],["parent",{"_index":103,"title":{},"body":{"classes/CookieJar.html":{}}}],["pars",{"_index":129,"title":{},"body":{"classes/Document.html":{},"classes/DocumentParser.html":{}}}],["parse(html",{"_index":142,"title":{},"body":{"classes/Document.html":{}}}],["parse(stream",{"_index":155,"title":{},"body":{"classes/DocumentParser.html":{}}}],["parsecooki",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["parsedomstream",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["parsedomsync",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["parser",{"_index":125,"title":{},"body":{"classes/Document.html":{},"classes/DocumentParser.html":{}}}],["parsesync",{"_index":152,"title":{},"body":{"classes/DocumentParser.html":{}}}],["parsesync(arg",{"_index":156,"title":{},"body":{"classes/DocumentParser.html":{}}}],["path",{"_index":308,"title":{},"body":{"interfaces/MountInfo.html":{},"interfaces/ProxyOptions.html":{},"miscellaneous/variables.html":{}}}],["path2",{"_index":361,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["pattern",{"_index":392,"title":{},"body":{"interfaces/ResizeOptions.html":{}}}],["pdb",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pdf",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pem",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["per",{"_index":249,"title":{},"body":{"interfaces/Metadata.html":{},"miscellaneous/variables.html":{}}}],["perl",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["persist",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pilot",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipelin",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["pipelinestag",{"_index":671,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pipeplinestag",{"_index":680,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pixel",{"_index":248,"title":{},"body":{"interfaces/Metadata.html":{}}}],["pl",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["place",{"_index":321,"title":{},"body":{"interfaces/OverlayOptions.html":{}}}],["pm",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["png",{"_index":325,"title":{},"body":{"interfaces/PngOptions.html":{},"miscellaneous/variables.html":{}}}],["pngoption",{"_index":324,"title":{"interfaces/PngOptions.html":{}},"body":{"interfaces/PngOptions.html":{},"coverage.html":{}}}],["po",{"_index":298,"title":{},"body":{"classes/MiddlewareChain.html":{}}}],["portion",{"_index":356,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["powerpoint",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ppt",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pptx",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prc",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pre.0",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["pre.1",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["pre.2",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["pre.3",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["pre.4",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["pre.5",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["pre.6",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["pre.7",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["pre.8",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["pre.9",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":311,"title":{},"body":{"interfaces/MountInfo.html":{}}}],["preparestacktrac",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["presenc",{"_index":254,"title":{},"body":{"interfaces/Metadata.html":{}}}],["present",{"_index":252,"title":{},"body":{"interfaces/Metadata.html":{},"miscellaneous/variables.html":{}}}],["prevent",{"_index":222,"title":{},"body":{"interfaces/JpegOptions.html":{}}}],["privat",{"_index":102,"title":{},"body":{"classes/CookieJar.html":{},"classes/FormData.html":{},"classes/Request.html":{},"classes/Response.html":{}}}],["profil",{"_index":258,"title":{},"body":{"interfaces/Metadata.html":{},"miscellaneous/variables.html":{}}}],["profileend",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":219,"title":{},"body":{"interfaces/JpegOptions.html":{},"interfaces/PngOptions.html":{}}}],["project",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["promis",{"_index":52,"title":{},"body":{"classes/BodyMixin.html":{},"miscellaneous/variables.html":{}}}],["promise((resolv",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prop",{"_index":282,"title":{},"body":{"classes/Middleware.html":{}}}],["properti",{"_index":7,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"interfaces/BridgeTransferOptions.html":{},"interfaces/CacheSetOptions.html":{},"classes/Collection.html":{},"interfaces/Color.html":{},"classes/CookieJar.html":{},"interfaces/CreateOptions.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"interfaces/ExtendOptions.html":{},"classes/FetchEvent.html":{},"interfaces/FlyRequest.html":{},"interfaces/FlyRequestInit.html":{},"classes/FormData.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"classes/Node.html":{},"interfaces/OperationResult.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"classes/Request.html":{},"interfaces/ResizeOptions.html":{},"classes/Response.html":{},"interfaces/ResponseCacheSetOptions.html":{},"interfaces/ScaleOptions.html":{},"interfaces/StaticServerOptions.html":{},"classes/TextDecoder.html":{},"interfaces/WebpOptions.html":{}}}],["protect",{"_index":8,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"classes/Document.html":{},"classes/Element.html":{},"classes/Node.html":{}}}],["provid",{"_index":634,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["proxi",{"_index":337,"title":{},"body":{"interfaces/ProxyOptions.html":{},"coverage.html":{}}}],["proxy(\"https://fly.io/path1",{"_index":362,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["proxyopt",{"_index":335,"title":{"interfaces/ProxyOptions.html":{}},"body":{"interfaces/ProxyOptions.html":{},"coverage.html":{}}}],["ps",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":10,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"classes/Collection.html":{},"classes/CookieJar.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"classes/FetchEvent.html":{},"classes/FormData.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"classes/Node.html":{},"classes/Request.html":{},"classes/Response.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{}}}],["purg",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purgetag",{"_index":532,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":72,"title":{},"body":{"classes/Collection.html":{},"miscellaneous/variables.html":{}}}],["put(key",{"_index":81,"title":{},"body":{"classes/Collection.html":{}}}],["qualiti",{"_index":220,"title":{},"body":{"interfaces/JpegOptions.html":{},"interfaces/WebpOptions.html":{}}}],["queryselector",{"_index":132,"title":{},"body":{"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"classes/Node.html":{}}}],["queryselector(selector",{"_index":146,"title":{},"body":{"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"classes/Node.html":{}}}],["queryselectoral",{"_index":133,"title":{},"body":{"classes/Document.html":{},"classes/Element.html":{},"classes/Node.html":{}}}],["queryselectorall(selector",{"_index":148,"title":{},"body":{"classes/Document.html":{},"classes/Element.html":{},"classes/Node.html":{}}}],["r",{"_index":88,"title":{},"body":{"interfaces/Color.html":{}}}],["ra",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rang",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rar",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ratio",{"_index":421,"title":{},"body":{"interfaces/ScaleOptions.html":{}}}],["rc0",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["readablestream",{"_index":50,"title":{},"body":{"classes/BodyMixin.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["readablestreamcontrol",{"_index":364,"title":{"interfaces/ReadableStreamController.html":{}},"body":{"interfaces/ReadableStreamController.html":{},"coverage.html":{}}}],["readonli",{"_index":11,"title":{},"body":{"classes/Blob.html":{}}}],["readtimeout",{"_index":200,"title":{},"body":{"interfaces/FlyRequestInit.html":{}}}],["realaudio",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["receiv",{"_index":183,"title":{},"body":{"classes/FetchEvent.html":{}}}],["reclaim",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["red",{"_index":96,"title":{},"body":{"interfaces/Color.html":{}}}],["redhat",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":398,"title":{},"body":{"classes/Response.html":{}}}],["redirect(url",{"_index":400,"title":{},"body":{"classes/Response.html":{}}}],["reduct",{"_index":393,"title":{},"body":{"interfaces/ResizeOptions.html":{}}}],["referr",{"_index":372,"title":{},"body":{"classes/Request.html":{}}}],["reftostream",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["region",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reject",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reject(new",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["releas",{"_index":58,"title":{},"body":{"interfaces/BridgeTransferOptions.html":{},"miscellaneous/variables.html":{}}}],["remoteaddr",{"_index":196,"title":{},"body":{"interfaces/FlyRequest.html":{},"classes/Request.html":{}}}],["replac",{"_index":355,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["replacewith",{"_index":160,"title":{},"body":{"classes/Element.html":{}}}],["replacewith(html",{"_index":166,"title":{},"body":{"classes/Element.html":{}}}],["repres",{"_index":203,"title":{},"body":{"classes/FormData.html":{},"classes/Response.html":{}}}],["req",{"_index":277,"title":{},"body":{"classes/Middleware.html":{},"classes/MiddlewareChain.html":{}}}],["request",{"_index":111,"title":{"classes/Request.html":{}},"body":{"classes/CookieJar.html":{},"classes/FetchEvent.html":{},"interfaces/FlyRequest.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"interfaces/ProxyOptions.html":{},"classes/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requestinit",{"_index":199,"title":{},"body":{"interfaces/FlyRequestInit.html":{}}}],["require(\"whatwg",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resiz",{"_index":378,"title":{},"body":{"interfaces/ResizeOptions.html":{},"interfaces/ScaleOptions.html":{},"changelog.html":{}}}],["resizeopt",{"_index":377,"title":{"interfaces/ResizeOptions.html":{}},"body":{"interfaces/ResizeOptions.html":{},"interfaces/ScaleOptions.html":{},"coverage.html":{}}}],["resolv",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve(ok",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respondwith",{"_index":186,"title":{},"body":{"classes/FetchEvent.html":{}}}],["respondwith(fn",{"_index":189,"title":{},"body":{"classes/FetchEvent.html":{}}}],["respondwithent",{"_index":185,"title":{},"body":{"classes/FetchEvent.html":{}}}],["respons",{"_index":112,"title":{"classes/Response.html":{}},"body":{"classes/CookieJar.html":{},"classes/FormData.html":{},"interfaces/Metadata-1.html":{},"classes/MiddlewareChain.html":{},"classes/Response.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["responsecachesetopt",{"_index":402,"title":{"interfaces/ResponseCacheSetOptions.html":{}},"body":{"interfaces/ResponseCacheSetOptions.html":{},"coverage.html":{}}}],["result",{"_index":33,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"interfaces/BridgeTransferOptions.html":{},"interfaces/CacheSetOptions.html":{},"classes/Collection.html":{},"interfaces/Color.html":{},"classes/CookieJar.html":{},"interfaces/CreateOptions.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"interfaces/ExtendOptions.html":{},"classes/FetchEvent.html":{},"interfaces/FlyRequest.html":{},"interfaces/FlyRequestInit.html":{},"classes/FormData.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"interfaces/MountInfo.html":{},"classes/Node.html":{},"interfaces/OperationResult.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ReadableStreamController.html":{},"classes/Request.html":{},"interfaces/ResizeOptions.html":{},"classes/Response.html":{},"interfaces/ResponseCacheSetOptions.html":{},"interfaces/ScaleOptions.html":{},"interfaces/StaticServerOptions.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"classes/TimeoutError.html":{},"interfaces/WebpOptions.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":80,"title":{},"body":{"classes/Collection.html":{},"interfaces/StaticServerOptions.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":32,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"classes/Collection.html":{},"classes/CookieJar.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"classes/FetchEvent.html":{},"classes/FormData.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"classes/Node.html":{},"interfaces/ReadableStreamController.html":{},"classes/Request.html":{},"classes/Response.html":{},"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"miscellaneous/variables.html":{}}}],["rgb",{"_index":264,"title":{},"body":{"interfaces/Metadata.html":{}}}],["right",{"_index":175,"title":{},"body":{"interfaces/ExtendOptions.html":{}}}],["root",{"_index":428,"title":{},"body":{"interfaces/StaticServerOptions.html":{}}}],["row",{"_index":329,"title":{},"body":{"interfaces/PngOptions.html":{}}}],["rpm",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rsepons",{"_index":279,"title":{},"body":{"classes/Middleware.html":{}}}],["rss",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rtf",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":280,"title":{},"body":{"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"miscellaneous/variables.html":{}}}],["run(mw",{"_index":284,"title":{},"body":{"classes/Middleware.html":{}}}],["run(req",{"_index":299,"title":{},"body":{"classes/MiddlewareChain.html":{}}}],["runmiddlewar",{"_index":296,"title":{},"body":{"classes/MiddlewareChain.html":{}}}],["runmiddleware(mw",{"_index":302,"title":{},"body":{"classes/MiddlewareChain.html":{}}}],["s",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["samesit",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scale",{"_index":405,"title":{},"body":{"interfaces/ScaleOptions.html":{}}}],["scaleopt",{"_index":404,"title":{"interfaces/ScaleOptions.html":{}},"body":{"interfaces/ScaleOptions.html":{},"coverage.html":{}}}],["scan",{"_index":229,"title":{},"body":{"interfaces/JpegOptions.html":{},"interfaces/PngOptions.html":{}}}],["sea",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secur",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["see",{"_index":406,"title":{},"body":{"interfaces/ScaleOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":616,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":147,"title":{},"body":{"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"classes/Node.html":{}}}],["semant",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["send",{"_index":351,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["sent",{"_index":354,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["serv",{"_index":425,"title":{},"body":{"interfaces/StaticServerOptions.html":{}}}],["set",{"_index":107,"title":{},"body":{"classes/CookieJar.html":{},"classes/FormData.html":{},"interfaces/JpegOptions.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"interfaces/ProxyOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["set(nam",{"_index":213,"title":{},"body":{"classes/FormData.html":{}}}],["setattribut",{"_index":161,"title":{},"body":{"classes/Element.html":{}}}],["setattribute(nam",{"_index":167,"title":{},"body":{"classes/Element.html":{}}}],["setchildren(children",{"_index":315,"title":{},"body":{"classes/Node.html":{}}}],["setimmedi",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["setinterv",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["setmeta",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["settag",{"_index":538,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["settimeout",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["shockwav",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shrink",{"_index":386,"title":{},"body":{"interfaces/ResizeOptions.html":{}}}],["shtml",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signatur",{"_index":275,"title":{},"body":{"classes/Middleware.html":{}}}],["singl",{"_index":285,"title":{},"body":{"classes/Middleware.html":{}}}],["sit",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["size",{"_index":12,"title":{},"body":{"classes/Blob.html":{}}}],["skipcachehead",{"_index":403,"title":{},"body":{"interfaces/ResponseCacheSetOptions.html":{}}}],["slice",{"_index":15,"title":{},"body":{"classes/Blob.html":{}}}],["slice(start",{"_index":28,"title":{},"body":{"classes/Blob.html":{}}}],["slight",{"_index":390,"title":{},"body":{"interfaces/ResizeOptions.html":{}}}],["sourc",{"_index":414,"title":{},"body":{"interfaces/ScaleOptions.html":{}}}],["south",{"_index":640,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["southeast",{"_index":644,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["southwest",{"_index":646,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["space",{"_index":241,"title":{},"body":{"interfaces/Metadata.html":{},"miscellaneous/variables.html":{}}}],["spec",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specifi",{"_index":415,"title":{},"body":{"interfaces/ScaleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["src/.../blob.t",{"_index":663,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../body_mixin.t",{"_index":664,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../bridge.t",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cache.t",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../console.t",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cookie_jar.t",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../crypto.t",{"_index":668,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../data.t",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../document.t",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error.t",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../events.t",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fetch.t",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../global.t",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http.t",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../image.t",{"_index":632,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../index.t",{"_index":669,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../log.t",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.t",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../middleware.t",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pipeline.t",{"_index":672,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../response.t",{"_index":666,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../static.t",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../streams.t",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../text",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../timers.t",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/blob.t",{"_index":4,"title":{},"body":{"classes/Blob.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/body_mixin.t",{"_index":36,"title":{},"body":{"classes/BodyMixin.html":{},"interfaces/ReadableStreamController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/bridge.t",{"_index":57,"title":{},"body":{"interfaces/BridgeTransferOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cache.t",{"_index":494,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/console.t",{"_index":498,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cookie_jar.t",{"_index":98,"title":{},"body":{"classes/CookieJar.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/crypto.t",{"_index":505,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/document.t",{"_index":121,"title":{},"body":{"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"classes/Node.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/error.t",{"_index":515,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/events.t",{"_index":178,"title":{},"body":{"classes/FetchEvent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fetch.t",{"_index":198,"title":{},"body":{"interfaces/FlyRequestInit.html":{},"classes/TimeoutError.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fly/cache/global.t",{"_index":531,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fly/cache/index.t",{"_index":62,"title":{},"body":{"interfaces/CacheSetOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fly/cache/response.t",{"_index":268,"title":{},"body":{"interfaces/Metadata-1.html":{},"interfaces/ResponseCacheSetOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/fly/data.t",{"_index":67,"title":{},"body":{"classes/Collection.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fly/fetch/index.t",{"_index":192,"title":{},"body":{"interfaces/FlyRequest.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/fly/fetch/mount.t",{"_index":307,"title":{},"body":{"interfaces/MountInfo.html":{},"coverage.html":{}}}],["src/fly/fetch/pipeline.t",{"_index":552,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/fly/fetch/proxy.t",{"_index":336,"title":{},"body":{"interfaces/ProxyOptions.html":{},"coverage.html":{}}}],["src/fly/http.t",{"_index":556,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fly/image.t",{"_index":84,"title":{},"body":{"interfaces/Color.html":{},"interfaces/CreateOptions.html":{},"interfaces/ExtendOptions.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata.html":{},"interfaces/OperationResult.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ResizeOptions.html":{},"interfaces/ScaleOptions.html":{},"interfaces/WebpOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/fly/index.t",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["src/fly/log.t",{"_index":577,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fly/static.t",{"_index":424,"title":{},"body":{"interfaces/StaticServerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fly/streams.t",{"_index":581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/form_data.t",{"_index":202,"title":{},"body":{"classes/FormData.html":{},"coverage.html":{}}}],["src/headers.t",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["src/logger.t",{"_index":589,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/middleware.t",{"_index":274,"title":{},"body":{"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/request.t",{"_index":369,"title":{},"body":{"classes/Request.html":{},"coverage.html":{}}}],["src/response.t",{"_index":395,"title":{},"body":{"classes/Response.html":{},"coverage.html":{}}}],["src/streams.t",{"_index":601,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/text",{"_index":430,"title":{},"body":{"classes/TextDecoder.html":{},"classes/TextEncoder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/timers.t",{"_index":602,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srgb",{"_index":245,"title":{},"body":{"interfaces/Metadata.html":{}}}],["stack",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stack.slice(2).join(\"\\n",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":31,"title":{"changelog.html":{},"index.html":{}},"body":{"classes/Blob.html":{}}}],["statement",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":124,"title":{},"body":{"classes/Document.html":{},"classes/Middleware.html":{},"classes/Response.html":{},"interfaces/StaticServerOptions.html":{}}}],["staticserv",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["staticserveropt",{"_index":423,"title":{"interfaces/StaticServerOptions.html":{}},"body":{"interfaces/StaticServerOptions.html":{},"coverage.html":{}}}],["statu",{"_index":271,"title":{},"body":{"interfaces/Metadata-1.html":{},"classes/Response.html":{}}}],["statustext",{"_index":397,"title":{},"body":{"classes/Response.html":{}}}],["store",{"_index":78,"title":{},"body":{"classes/Collection.html":{},"classes/CookieJar.html":{},"miscellaneous/variables.html":{}}}],["straight",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategi",{"_index":633,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stream",{"_index":40,"title":{},"body":{"classes/BodyMixin.html":{},"classes/DocumentParser.html":{},"miscellaneous/variables.html":{}}}],["streams/refer",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stretch",{"_index":411,"title":{},"body":{"interfaces/ScaleOptions.html":{}}}],["string",{"_index":27,"title":{},"body":{"classes/Blob.html":{},"interfaces/CacheSetOptions.html":{},"classes/Collection.html":{},"interfaces/CreateOptions.html":{},"interfaces/FlyRequest.html":{},"classes/FormData.html":{},"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"interfaces/MountInfo.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ReadableStreamController.html":{},"classes/Request.html":{},"classes/Response.html":{},"interfaces/ResponseCacheSetOptions.html":{},"interfaces/StaticServerOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strip",{"_index":348,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["strippath",{"_index":339,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["stuffit",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subsampl",{"_index":224,"title":{},"body":{"interfaces/JpegOptions.html":{}}}],["subtl",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["suitabl",{"_index":269,"title":{},"body":{"interfaces/Metadata-1.html":{}}}],["support",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svgz",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swf",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":609,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":64,"title":{},"body":{"interfaces/CacheSetOptions.html":{},"interfaces/Metadata-1.html":{},"miscellaneous/variables.html":{}}}],["tagnam",{"_index":138,"title":{},"body":{"classes/Document.html":{}}}],["take",{"_index":382,"title":{},"body":{"interfaces/ResizeOptions.html":{}}}],["tcl",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":45,"title":{},"body":{"classes/BodyMixin.html":{}}}],["text/css",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text/html",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text/mathml",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text/plain",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text/vnd.sun.j2me.app",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text/vnd.wap.wml",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text/x",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text/xml",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["textcont",{"_index":162,"title":{},"body":{"classes/Element.html":{}}}],["textdecod",{"_index":429,"title":{"classes/TextDecoder.html":{}},"body":{"classes/TextDecoder.html":{},"coverage.html":{}}}],["textencod",{"_index":436,"title":{"classes/TextEncoder.html":{}},"body":{"classes/TextEncoder.html":{},"coverage.html":{}}}],["they'r",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thread",{"_index":300,"title":{},"body":{"classes/MiddlewareChain.html":{}}}],["through",{"_index":301,"title":{},"body":{"classes/MiddlewareChain.html":{},"interfaces/ProxyOptions.html":{}}}],["throw",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tif",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiff",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tile",{"_index":320,"title":{},"body":{"interfaces/OverlayOptions.html":{}}}],["time",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeend",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timelin",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timelineend",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeout",{"_index":201,"title":{},"body":{"interfaces/FlyRequestInit.html":{}}}],["timeouterror",{"_index":438,"title":{"classes/TimeoutError.html":{}},"body":{"classes/TimeoutError.html":{},"coverage.html":{}}}],["timestamp",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tk",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todo",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["top",{"_index":176,"title":{},"body":{"interfaces/ExtendOptions.html":{},"interfaces/OverlayOptions.html":{}}}],["tostr",{"_index":207,"title":{},"body":{"classes/FormData.html":{}}}],["touch",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["trace",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trace:\\n",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transfer",{"_index":59,"title":{},"body":{"interfaces/BridgeTransferOptions.html":{},"miscellaneous/variables.html":{}}}],["transformstream",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transpar",{"_index":255,"title":{},"body":{"interfaces/Metadata.html":{}}}],["true",{"_index":226,"title":{},"body":{"interfaces/JpegOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ResizeOptions.html":{},"interfaces/ScaleOptions.html":{},"interfaces/WebpOptions.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ttl",{"_index":65,"title":{},"body":{"interfaces/CacheSetOptions.html":{},"interfaces/Metadata-1.html":{},"miscellaneous/variables.html":{}}}],["tupl",{"_index":681,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["txt",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/Blob.html":{},"classes/BodyMixin.html":{},"interfaces/BridgeTransferOptions.html":{},"interfaces/CacheSetOptions.html":{},"classes/Collection.html":{},"interfaces/Color.html":{},"classes/CookieJar.html":{},"interfaces/CreateOptions.html":{},"classes/Document.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"interfaces/ExtendOptions.html":{},"classes/FetchEvent.html":{},"interfaces/FlyRequest.html":{},"interfaces/FlyRequestInit.html":{},"classes/FormData.html":{},"interfaces/JpegOptions.html":{},"interfaces/Metadata.html":{},"interfaces/Metadata-1.html":{},"classes/Middleware.html":{},"classes/MiddlewareChain.html":{},"classes/MiddlewareSettings.html":{},"classes/Node.html":{},"interfaces/OperationResult.html":{},"interfaces/OverlayOptions.html":{},"interfaces/PngOptions.html":{},"interfaces/ProxyOptions.html":{},"interfaces/ReadableStreamController.html":{},"classes/Request.html":{},"interfaces/ResizeOptions.html":{},"classes/Response.html":{},"interfaces/ResponseCacheSetOptions.html":{},"interfaces/ScaleOptions.html":{},"interfaces/StaticServerOptions.html":{},"classes/TextDecoder.html":{},"interfaces/WebpOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":661,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedarray",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typedarray.length",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typedarray.set(newarr",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/nod",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uint8array",{"_index":25,"title":{},"body":{"classes/Blob.html":{},"miscellaneous/variables.html":{}}}],["uint8array(bridge.dispatchsync(\"getrandomvalu",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefin",{"_index":352,"title":{},"body":{"interfaces/ProxyOptions.html":{},"miscellaneous/variables.html":{}}}],["underli",{"_index":109,"title":{},"body":{"classes/CookieJar.html":{}}}],["unimpl",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["univers",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["unmodifi",{"_index":353,"title":{},"body":{"interfaces/ProxyOptions.html":{}}}],["unus",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":345,"title":{},"body":{"interfaces/ProxyOptions.html":{},"classes/Request.html":{},"classes/Response.html":{},"dependencies.html":{}}}],["urlsearchparam",{"_index":675,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us",{"_index":227,"title":{},"body":{"interfaces/JpegOptions.html":{},"classes/MiddlewareChain.html":{},"interfaces/PngOptions.html":{},"interfaces/ResizeOptions.html":{},"interfaces/WebpOptions.html":{}}}],["use(mw",{"_index":303,"title":{},"body":{"classes/MiddlewareChain.html":{}}}],["ushort",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["usvstr",{"_index":674,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["util",{"_index":193,"title":{},"body":{"interfaces/FlyRequest.html":{}}}],["validatebodytyp",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["valu",{"_index":70,"title":{},"body":{"classes/Collection.html":{},"classes/CookieJar.html":{},"classes/Element.html":{},"classes/FormData.html":{},"interfaces/Metadata.html":{},"interfaces/ProxyOptions.html":{},"classes/Response.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":491,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["video/3gpp",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/mp2t",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/mp4",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/mpeg",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/quicktim",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/webm",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video/x",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":113,"title":{},"body":{"classes/CookieJar.html":{},"classes/DocumentParser.html":{},"classes/Element.html":{},"classes/FetchEvent.html":{},"classes/FormData.html":{},"classes/MiddlewareChain.html":{},"classes/Node.html":{},"interfaces/ReadableStreamController.html":{},"miscellaneous/variables.html":{}}}],["volatil",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["w",{"_index":266,"title":{},"body":{"interfaces/Metadata.html":{}}}],["war",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warn(...arg",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warn(fmt",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wbmp",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webm",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webp",{"_index":385,"title":{},"body":{"interfaces/ResizeOptions.html":{},"interfaces/WebpOptions.html":{},"miscellaneous/variables.html":{}}}],["webpopt",{"_index":440,"title":{"interfaces/WebpOptions.html":{}},"body":{"interfaces/WebpOptions.html":{},"coverage.html":{}}}],["west",{"_index":641,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wide",{"_index":267,"title":{},"body":{"interfaces/Metadata.html":{}}}],["width",{"_index":119,"title":{},"body":{"interfaces/CreateOptions.html":{},"interfaces/Metadata.html":{},"interfaces/ScaleOptions.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["without",{"_index":343,"title":{},"body":{"interfaces/ProxyOptions.html":{},"changelog.html":{}}}],["wml",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wmlc",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wmv",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["woff",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["woff2",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["work",{"_index":194,"title":{},"body":{"interfaces/FlyRequest.html":{},"miscellaneous/variables.html":{}}}],["wrapcallsit",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["writablepars",{"_index":514,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["writablestream",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["write",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x509",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xhtml",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xl",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xlsx",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xml",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xpi",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xpinstal",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xspf",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ye",{"_index":24,"title":{},"body":{"classes/Blob.html":{},"classes/Request.html":{}}}],["zip",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zlib",{"_index":331,"title":{},"body":{"interfaces/PngOptions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Blob.html":{"url":"classes/Blob.html","title":"class - Blob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Blob\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/blob.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                bytes\n                            \n                            \n                                    Public\n                                    Readonly\n                                size\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                slice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(blobParts?: BlobPart[], options?: BlobPropertyBag)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        blobParts\n                                                  \n                                                        \n                                                                    BlobPart[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    BlobPropertyBag\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            bytes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bytes:     Uint8Array\n\n                    \n                \n                    \n                        \n                            Type :     Uint8Array\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            size\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        size:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            slice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        slice(start?: number, end?: number, contentType?: string)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        end\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        contentType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Blob\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BodyMixin.html":{"url":"classes/BodyMixin.html","title":"class - BodyMixin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyMixin\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/body_mixin.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Body\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                bodySource\n                            \n                            \n                                    Protected\n                                stream\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                arrayBuffer\n                            \n                            \n                                    Public\n                                    Async\n                                blob\n                            \n                            \n                                    Public\n                                    Async\n                                formData\n                            \n                            \n                                    Public\n                                    Async\n                                json\n                            \n                            \n                                    Public\n                                    Async\n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    body\n                                \n                                \n                                    bodyUsed\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj: BodySource)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                    BodySource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            bodySource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bodySource:     BodySource\n\n                    \n                \n                    \n                        \n                            Type :     BodySource\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            stream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stream:     ReadableStream | null\n\n                    \n                \n                    \n                        \n                            Type :     ReadableStream | null\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            arrayBuffer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        arrayBuffer()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            blob\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        blob()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            formData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        formData()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            json\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        json()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            text\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        text()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n\n                \n                    \n                        getbody()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        bodyUsed\n                    \n                \n\n                \n                    \n                        getbodyUsed()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BridgeTransferOptions.html":{"url":"interfaces/BridgeTransferOptions.html","title":"interface - BridgeTransferOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BridgeTransferOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bridge.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        release\n                                \n                                \n                                            Optional\n                                        transfer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        release\n                                    \n                                \n                                \n                                    \n                                        release:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transfer\n                                    \n                                \n                                \n                                    \n                                        transfer:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheSetOptions.html":{"url":"interfaces/CacheSetOptions.html","title":"interface - CacheSetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheSetOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/cache/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        onlyIfEmpty\n                                \n                                \n                                            Optional\n                                        tags\n                                \n                                \n                                            Optional\n                                        ttl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        onlyIfEmpty\n                                    \n                                \n                                \n                                    \n                                        onlyIfEmpty:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                    \n                                \n                                \n                                    \n                                        tags:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                    \n                                \n                                \n                                    \n                                        ttl:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collection.html":{"url":"classes/Collection.html","title":"class - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collection\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/data.ts\n        \n\n            \n                Description\n            \n            \n                A collection of keys and values.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                del\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n\n                \n                    \n                            Opens a collection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                name of the collection to open\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        del(key: string)\n                    \n                \n\n\n\n\n                \n                    \n                            Deletes data from the collection store.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                key to delete\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(key: string)\n                    \n                \n\n\n\n\n                \n                    \n                            Retrieves data from the collection store\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                key to retrieve\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        put(key: string, obj: string)\n                    \n                \n\n\n\n\n                \n                    \n                            Stores data in the collection associated key\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                key for data\n\n                                                        \n                                                \n                                                \n                                                        obj\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                value to store\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Color\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/image.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alpha\n                                \n                                \n                                        b\n                                \n                                \n                                        g\n                                \n                                \n                                        r\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alpha\n                                    \n                                \n                                \n                                    \n                                        alpha:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    alpha channel, 0.0-1.0 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        b\n                                    \n                                \n                                \n                                    \n                                        b:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    blue channel, 0-255 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        g\n                                    \n                                \n                                \n                                    \n                                        g:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    green channel, 0-255 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        r\n                                    \n                                \n                                \n                                    \n                                        r:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    red channel, 0-255 \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CookieJar.html":{"url":"classes/CookieJar.html","title":"class - CookieJar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CookieJar\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cookie_jar.ts\n        \n\n            \n                Description\n            \n            \n                A jar for storing delicious cookies.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cookies\n                            \n                            \n                                    Private\n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                append\n                            \n                            \n                                    Public\n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(parent: )\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parent\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cookies\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cookies:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parent:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            append\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        append(name: , value: , options: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sets a cookie, and applies it to the underlying {@linkcode Request} or {@linkcode Response}\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(name: )\n                    \n                \n\n\n\n\n                \n                    \n                            Gets a cookie by name\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateOptions.html":{"url":"interfaces/CreateOptions.html","title":"interface - CreateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/image.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        background\n                                \n                                \n                                        channels\n                                \n                                \n                                        height\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        background\n                                    \n                                \n                                \n                                    \n                                        background:     Color | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Color | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channels\n                                    \n                                \n                                \n                                    \n                                        channels:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Document.html":{"url":"classes/Document.html","title":"class - Document","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Document\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/document.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Node\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                Parser\n                            \n                            \n                                    Protected\n                                _dom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createElement\n                            \n                            \n                                    Public\n                                getElementById\n                            \n                            \n                                    Static\n                                parse\n                            \n                            \n                                    Public\n                                _withParent\n                            \n                            \n                                    Public\n                                appendChild\n                            \n                            \n                                    Public\n                                querySelector\n                            \n                            \n                                    Public\n                                querySelectorAll\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    documentElement\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dom: )\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dom\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            Parser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Parser:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _dom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _dom:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createElement(tagName: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagName\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Element\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getElementById\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getElementById(id: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Element\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            parse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parse(html: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        html\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Document\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _withParent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _withParent(node: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appendChild\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        appendChild(html: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        html\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            querySelector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        querySelector(selector: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Element\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            querySelectorAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        querySelectorAll(selector: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        documentElement\n                    \n                \n\n                \n                    \n                        getdocumentElement()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentParser.html":{"url":"classes/DocumentParser.html","title":"class - DocumentParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentParser\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/document.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                parser\n                            \n                            \n                                    Public\n                                selectors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onElement\n                            \n                            \n                                    Public\n                                    Async\n                                parse\n                            \n                            \n                                    Public\n                                parseSync\n                            \n                            \n                                    Public\n                                querySelector\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parser:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectors:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onElement(elem: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elem\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            parse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parse(stream: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stream\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parseSync\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseSync(arg: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        arg\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            querySelector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        querySelector(selector: , callback: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Element.html":{"url":"classes/Element.html","title":"class - Element","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Element\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/document.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Node\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _dom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAttribute\n                            \n                            \n                                    Public\n                                replaceWith\n                            \n                            \n                                    Public\n                                setAttribute\n                            \n                            \n                                    Public\n                                _withParent\n                            \n                            \n                                    Public\n                                appendChild\n                            \n                            \n                                    Public\n                                querySelector\n                            \n                            \n                                    Public\n                                querySelectorAll\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    textContent\n                                \n                                \n                                    innerHTML\n                                \n                                \n                                    outerHTML\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dom: )\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dom\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _dom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _dom:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAttribute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAttribute(name: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            replaceWith\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        replaceWith(html: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        html\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setAttribute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setAttribute(name: , value: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _withParent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _withParent(node: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appendChild\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        appendChild(html: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        html\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            querySelector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        querySelector(selector: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Element\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            querySelectorAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        querySelectorAll(selector: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        textContent\n                    \n                \n\n                \n                    \n                        gettextContent()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        innerHTML\n                    \n                \n\n                \n                    \n                        getinnerHTML()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        outerHTML\n                    \n                \n\n                \n                    \n                        getouterHTML()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendOptions.html":{"url":"interfaces/ExtendOptions.html","title":"interface - ExtendOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExtendOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/image.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bottom\n                                \n                                \n                                            Optional\n                                        left\n                                \n                                \n                                            Optional\n                                        right\n                                \n                                \n                                            Optional\n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                    \n                                \n                                \n                                    \n                                        bottom:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                    \n                                \n                                \n                                    \n                                        right:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchEvent.html":{"url":"classes/FetchEvent.html","title":"class - FetchEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchEvent\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events.ts\n        \n\n            \n                Description\n            \n            \n                The fetch event fires when your app receives an HTTP request\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                callback\n                            \n                            \n                                    Public\n                                request\n                            \n                            \n                                    Public\n                                respondWithEntered\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                respondWith\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: , init: , callback: )\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        init\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        callback\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            callback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        callback:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            request\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        request:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            respondWithEntered\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        respondWithEntered:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            respondWith\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        respondWith(fn: )\n                    \n                \n\n\n\n\n                \n                    \n                            respondWith callback\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FlyRequest.html":{"url":"interfaces/FlyRequest.html","title":"interface - FlyRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FlyRequest\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/fetch/index.ts\n        \n\n            \n                Description\n            \n            \n                Utilities and types for working with fetch functions.\n\n            \n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        remoteAddr\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        remoteAddr\n                                    \n                                \n                                \n                                    \n                                        remoteAddr:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FlyRequestInit.html":{"url":"interfaces/FlyRequestInit.html","title":"interface - FlyRequestInit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FlyRequestInit\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fetch.ts\n        \n\n\n            \n                Extends\n            \n            \n                    RequestInit\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        readTimeout\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        readTimeout\n                                    \n                                \n                                \n                                    \n                                        readTimeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormData.html":{"url":"classes/FormData.html","title":"class - FormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/form_data.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a fetch response.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                append\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                entries\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                has\n                            \n                            \n                                    Public\n                                keys\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Public\n                                toString\n                            \n                            \n                                    Public\n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _data:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            append\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        append(name: string, value: string)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete(name: string)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        entries()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     IterableIterator<>\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(name: string)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(name: string)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        has(name: string)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keys()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     IterableIterator\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(name: string, value: string)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            values\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        values()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     IterableIterator\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JpegOptions.html":{"url":"interfaces/JpegOptions.html","title":"interface - JpegOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JpegOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/image.ts\n        \n\n            \n                Description\n            \n            \n                JPEG output options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        chromaSubsampling\n                                \n                                \n                                            Optional\n                                        force\n                                \n                                \n                                            Optional\n                                        progressive\n                                \n                                \n                                            Optional\n                                        quality\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chromaSubsampling\n                                    \n                                \n                                \n                                    \n                                        chromaSubsampling:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    set to '4:4:4' to prevent chroma subsampling when quality \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        force\n                                    \n                                \n                                \n                                    \n                                        force:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    force output to jpeg (default true) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progressive\n                                    \n                                \n                                \n                                    \n                                        progressive:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    use progressive (interlace) scan (defaults to false) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                    \n                                \n                                \n                                    \n                                        quality:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    quality, integer 1-100, defaults to 80 \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Metadata.html":{"url":"interfaces/Metadata.html","title":"interface - Metadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Metadata\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/image.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        channels\n                                \n                                \n                                            Optional\n                                        density\n                                \n                                \n                                            Optional\n                                        format\n                                \n                                \n                                            Optional\n                                        hasAlpha\n                                \n                                \n                                            Optional\n                                        hasProfile\n                                \n                                \n                                            Optional\n                                        height\n                                \n                                \n                                            Optional\n                                        orientation\n                                \n                                \n                                            Optional\n                                        space\n                                \n                                \n                                            Optional\n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channels\n                                    \n                                \n                                \n                                    \n                                        channels:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Number of bands e.g. 3 for sRGB, 4 for CMYK \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        density\n                                    \n                                \n                                \n                                    \n                                        density:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Number of pixels per inch (DPI), if present \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasAlpha\n                                    \n                                \n                                \n                                    \n                                        hasAlpha:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Boolean indicating the presence of an alpha transparency channel \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasProfile\n                                    \n                                \n                                \n                                    \n                                        hasProfile:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Boolean indicating the presence of an embedded ICC profile \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Number of pixels high \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                    \n                                \n                                \n                                    \n                                        orientation:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Number value of the EXIF Orientation header, if present \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        space\n                                    \n                                \n                                \n                                    \n                                        space:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name of colour space interpretation e.g. srgb, rgb, cmyk, lab, b-w ... \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Number of pixels wide \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Metadata-1.html":{"url":"interfaces/Metadata-1.html","title":"interface - Metadata-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Metadata\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/cache/response.ts\n        \n\n            \n                Description\n            \n            \n                Response metadata suitable for caching\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        at\n                                \n                                \n                                        headers\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        tags\n                                \n                                \n                                        ttl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        at\n                                    \n                                \n                                \n                                    \n                                        at:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                    \n                                \n                                \n                                    \n                                        tags:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                    \n                                \n                                \n                                    \n                                        ttl:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Middleware.html":{"url":"classes/Middleware.html","title":"class - Middleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Middleware\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware.ts\n        \n\n            \n                Description\n            \n            \n                Middleware functions must implement this signature.\nThey must accept a req and a next parameter, and return a Rseponse.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fn\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: )\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fn:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        settings:     MiddlewareSettings\n\n                    \n                \n                    \n                        \n                            Type :     MiddlewareSettings\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            run\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        run(mw: , settings: , req: )\n                    \n                \n\n\n\n\n                \n                    \n                            Runs a single middleware instance\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mw\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The middleware to run\n\n                                                        \n                                                \n                                                \n                                                        settings\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Settings for this middleware run\n\n                                                        \n                                                \n                                                \n                                                        req\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The HTTP request to operate on\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MiddlewareChain.html":{"url":"classes/MiddlewareChain.html","title":"class - MiddlewareChain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MiddlewareChain\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware.ts\n        \n\n            \n                Description\n            \n            \n                A chain of middleware to execute in order\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chain\n                            \n                            \n                                    Public\n                                currentPos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildNext\n                            \n                            \n                                    Public\n                                lastNextFunc\n                            \n                            \n                                    Public\n                                    Async\n                                run\n                            \n                            \n                                    Public\n                                runMiddleware\n                            \n                            \n                                    Public\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            chain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        chain:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentPos:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buildNext\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildNext(mw: , pos: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mw\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pos\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastNextFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        lastNextFunc()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            run\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        run(req: )\n                    \n                \n\n\n\n\n                \n                    \n                            Runs the chain of middleware\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The HTTP request to thread through the chain\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    The resulting response\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            runMiddleware\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        runMiddleware(mw: , req: , next: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mw\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        req\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        use(mw: , settings: )\n                    \n                \n\n\n\n\n                \n                    \n                            Appends middleware to the chain\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mw\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Middleware to add to the chain\n\n                                                        \n                                                \n                                                \n                                                        settings\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Settings for this middleware\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MiddlewareSettings.html":{"url":"classes/MiddlewareSettings.html","title":"class - MiddlewareSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MiddlewareSettings\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: )\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        settings:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(name: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MountInfo.html":{"url":"interfaces/MountInfo.html","title":"interface - MountInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MountInfo\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/fetch/mount.ts\n        \n\n            \n                Description\n            \n            \n                Path and fetch function map for mount handler\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [prefix: string]:    FetchFunction\n\n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Node.html":{"url":"classes/Node.html","title":"class - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Node\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/document.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _dom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _withParent\n                            \n                            \n                                    Public\n                                appendChild\n                            \n                            \n                                    Public\n                                querySelector\n                            \n                            \n                                    Public\n                                querySelectorAll\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    children\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dom: )\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dom\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _dom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _dom:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _withParent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _withParent(node: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appendChild\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        appendChild(html: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        html\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            querySelector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        querySelector(selector: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Element\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            querySelectorAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        querySelectorAll(selector: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selector\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        children\n                    \n                \n\n                \n                    \n                        getchildren()\n                    \n                \n\n                \n                    \n                        setchildren(children: )\n                    \n                \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            children\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OperationResult.html":{"url":"interfaces/OperationResult.html","title":"interface - OperationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OperationResult\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/image.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        info\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     ArrayBuffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ArrayBuffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:     Metadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Metadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OverlayOptions.html":{"url":"interfaces/OverlayOptions.html","title":"interface - OverlayOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OverlayOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/image.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cutout\n                                \n                                \n                                            Optional\n                                        density\n                                \n                                \n                                            Optional\n                                        gravity\n                                \n                                \n                                            Optional\n                                        left\n                                \n                                \n                                            Optional\n                                        tile\n                                \n                                \n                                            Optional\n                                        top\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cutout\n                                    \n                                \n                                \n                                    \n                                        cutout:     Boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        density\n                                    \n                                \n                                \n                                    \n                                        density:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gravity\n                                    \n                                \n                                \n                                    \n                                        gravity:     gravity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     gravity\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    gravity at which to place the overlay. (optional, default center) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tile\n                                    \n                                \n                                \n                                    \n                                        tile:     Boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PngOptions.html":{"url":"interfaces/PngOptions.html","title":"interface - PngOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PngOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/image.ts\n        \n\n            \n                Description\n            \n            \n                PNG output options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        adaptiveFiltering\n                                \n                                \n                                            Optional\n                                        compressionLevel\n                                \n                                \n                                            Optional\n                                        force\n                                \n                                \n                                            Optional\n                                        progressive\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adaptiveFiltering\n                                    \n                                \n                                \n                                    \n                                        adaptiveFiltering:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    use adaptive row filtering (defaults to false) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compressionLevel\n                                    \n                                \n                                \n                                    \n                                        compressionLevel:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zlib compression level, 0-9 (default to 9) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        force\n                                    \n                                \n                                \n                                    \n                                        force:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    force PNG output (defaults to true) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progressive\n                                    \n                                \n                                \n                                    \n                                        progressive:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    use progressive (interlace) scan (defaults to false) \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProxyOptions.html":{"url":"interfaces/ProxyOptions.html","title":"interface - ProxyOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProxyOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/fetch/proxy.ts\n        \n\n            \n                Description\n            \n            \n                Options for proxy.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        forwardHostHeader\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        stripPath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        forwardHostHeader\n                                    \n                                \n                                \n                                    \n                                        forwardHostHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Forward Host header from original request. Without this options,\nproxy requests infers a host header from the origin URL.\nDefaults to false.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to set on backend request. Each header accepts either a boolean or string.\n\nIf set to false, strip header entirely before sending.\ntrue or undefined send the header through unmodified from the original request.\nstring header values are sent as is\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stripPath\n                                    \n                                \n                                \n                                    \n                                        stripPath:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Replace this portion of URL path before making request to origin.\nFor example, this makes a request to https://fly.io/path1/to/document.html:\n   * const opts = { stripPath: \"/path2/\"}\n   * const origin = proxy(\"https://fly.io/path1/\", opts)\n   * origin(\"https://somehostname.com/path2/to/document.html\")\n   *\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadableStreamController.html":{"url":"interfaces/ReadableStreamController.html","title":"interface - ReadableStreamController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadableStreamController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/body_mixin.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    close\n                                \n                                \n                                    enqueue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \nclose()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enqueue\n                            \n                            \n                        \n                    \n                \n                \n                    \nenqueue(chunk: string | ArrayBuffer)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chunk\n                                                        \n                                                                    string | ArrayBuffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Request.html":{"url":"classes/Request.html","title":"class - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Request\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/request.ts\n        \n\n            \n                Description\n            \n            \n                An HTTP request\n\n            \n\n            \n                Extends\n            \n            \n                    Body\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cookieJar\n                            \n                            \n                                    Public\n                                credentials\n                            \n                            \n                                    Public\n                                headers\n                            \n                            \n                                    Public\n                                method\n                            \n                            \n                                    Public\n                                mode\n                            \n                            \n                                    Public\n                                referrer\n                            \n                            \n                                    Public\n                                remoteAddr\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clone\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cookies\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: , init?: )\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        init\n                                                  \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cookieJar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cookieJar:     CookieJar\n\n                    \n                \n                    \n                        \n                            Type :     CookieJar\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     Headers\n\n                    \n                \n                    \n                        \n                            Type :     Headers\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            method\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        method:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mode:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referrer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        referrer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            remoteAddr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        remoteAddr:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clone()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     Request\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        cookies\n                    \n                \n\n                \n                    \n                        getcookies()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResizeOptions.html":{"url":"interfaces/ResizeOptions.html","title":"interface - ResizeOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResizeOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/image.ts\n        \n\n            \n                Description\n            \n            \n                Options for resizing an image\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fastShrinkOnLoad\n                                \n                                \n                                            Optional\n                                        kernel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fastShrinkOnLoad\n                                    \n                                \n                                \n                                    \n                                        fastShrinkOnLoad:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    take greater advantage of the JPEG\nand WebP shrink-on-load feature, which can lead to a slight moiré pattern on\nsome images. (optional, default true)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kernel\n                                    \n                                \n                                \n                                    \n                                        kernel:     kernel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     kernel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    the kernel to use for image reduction.\n  (optional, default 'lanczos3')\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Response.html":{"url":"classes/Response.html","title":"class - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Response\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/response.ts\n        \n\n            \n                Description\n            \n            \n                Class representing a fetch response.\n\n            \n\n            \n                Extends\n            \n            \n                    Body\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cookieJar\n                            \n                            \n                                    Public\n                                headers\n                            \n                            \n                                    Public\n                                ok\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                statusText\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clone\n                            \n                            \n                                    Static\n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cookies\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(body: , init: )\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        init\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cookieJar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cookieJar:     CookieJar\n\n                    \n                \n                    \n                        \n                            Type :     CookieJar\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     Headers\n\n                    \n                \n                    \n                        \n                            Type :     Headers\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ok\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ok:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        status:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            statusText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clone()\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                Returns :     Response\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        redirect(url: , status: number)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        status\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                302\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Response\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        cookies\n                    \n                \n\n                \n                    \n                        getcookies()\n                    \n                \n                    \n                        \n\n                                \n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseCacheSetOptions.html":{"url":"interfaces/ResponseCacheSetOptions.html","title":"interface - ResponseCacheSetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseCacheSetOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/cache/response.ts\n        \n\n\n            \n                Extends\n            \n            \n                    CacheSetOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        skipCacheHeaders\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        skipCacheHeaders\n                                    \n                                \n                                \n                                    \n                                        skipCacheHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScaleOptions.html":{"url":"interfaces/ScaleOptions.html","title":"interface - ScaleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ScaleOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/image.ts\n        \n\n            \n                Description\n            \n            \n                Options for scaling an image (see crop for cropping)\n\n            \n\n            \n                Extends\n            \n            \n                    ResizeOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        allowEnlargement\n                                \n                                \n                                            Optional\n                                        fit\n                                \n                                \n                                            Optional\n                                        ignoreAspectRatio\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowEnlargement\n                                    \n                                \n                                \n                                    \n                                        allowEnlargement:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Stretch image if resize dimensions are larger than the source image.\nDefaults to true\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fit\n                                    \n                                \n                                \n                                    \n                                        fit:     fit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fit\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    fit specifies how an image be scaled to fit the new dimensions\nDefaults to contain.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreAspectRatio\n                                    \n                                \n                                \n                                    \n                                        ignoreAspectRatio:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Resize to exactly the width and height specified, changing aspect ratio if necessary\nDefaults to false\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StaticServerOptions.html":{"url":"interfaces/StaticServerOptions.html","title":"interface - StaticServerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StaticServerOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/static.ts\n        \n\n            \n                Description\n            \n            \n                Options for static file serving, controls how files are retrieved.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        index\n                                \n                                \n                                            Optional\n                                        mimeTypes\n                                \n                                \n                                            Optional\n                                        root\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeTypes\n                                    \n                                \n                                \n                                    \n                                        mimeTypes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextDecoder.html":{"url":"classes/TextDecoder.html","title":"class - TextDecoder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextDecoder\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text-encoding.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                encoding\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(encoding: )\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encoding\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            encoding\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        encoding:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            decode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decode(input: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextEncoder.html":{"url":"classes/TextEncoder.html","title":"class - TextEncoder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextEncoder\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text-encoding.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                encode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            encode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        encode(input: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeoutError.html":{"url":"classes/TimeoutError.html","title":"class - TimeoutError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeoutError\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fetch.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WebpOptions.html":{"url":"interfaces/WebpOptions.html","title":"interface - WebpOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WebpOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fly/image.ts\n        \n\n            \n                Description\n            \n            \n                WebP output options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alphaQuality\n                                \n                                \n                                            Optional\n                                        force\n                                \n                                \n                                            Optional\n                                        lossless\n                                \n                                \n                                            Optional\n                                        nearLossless\n                                \n                                \n                                            Optional\n                                        quality\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alphaQuality\n                                    \n                                \n                                \n                                    \n                                        alphaQuality:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    quality of alpha layer, integer 0-100, default to 100 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        force\n                                    \n                                \n                                \n                                    \n                                        force:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    force WebP output, otherwise attempt to use input format, defaults to true \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lossless\n                                    \n                                \n                                \n                                    \n                                        lossless:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    use lossless compression mode \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nearLossless\n                                    \n                                \n                                \n                                    \n                                        nearLossless:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    use near_lossless compression mode \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                    \n                                \n                                \n                                    \n                                        quality:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    quality, integer 1-100, defaults to 80 \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n\n0.42.0 (2018-09-19)\nNote: Version bump only for package @fly/v8env\n\n0.42.0-pre.9 (2018-09-19)\nFeatures\n\nImage.crop to width and height (23d4e45)\nImage.scale — resize images without cropping (b800a27)\n\n\n0.42.0-pre.8 (2018-09-12)\nNote: Version bump only for package @fly/v8env\n\n0.42.0-pre.7 (2018-09-12)\nNote: Version bump only for package @fly/v8env\n\n0.42.0-pre.6 (2018-09-12)\nNote: Version bump only for package @fly/v8env\n\n0.42.0-pre.5 (2018-09-12)\nNote: Version bump only for package @fly/v8env\n\n0.42.0-pre.4 (2018-09-12)\nNote: Version bump only for package @fly/v8env\n\n0.42.0-pre.3 (2018-09-11)\nNote: Version bump only for package @fly/v8env\n\n0.42.0-pre.2 (2018-09-11)\nNote: Version bump only for package @fly/v8env\n\n0.42.0-pre.1 (2018-09-11)\nNote: Version bump only for package @fly/v8env\n\n0.42.0-pre.0 (2018-09-11)\nNote: Version bump only for package @fly/v8env\n\n0.41.0 (2018-09-11)\nNote: Version bump only for package @fly/v8env\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/blob.ts\n            \n            \n                class\n            \n            \n                Blob\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/blob.ts\n            \n            \n                function\n            \n            \n                concatenate\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/body_mixin.ts\n            \n            \n                class\n            \n            \n                BodyMixin\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/body_mixin.ts\n            \n            \n                interface\n            \n            \n                ReadableStreamController\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/body_mixin.ts\n            \n            \n                function\n            \n            \n                bufferFromStream\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/body_mixin.ts\n            \n            \n                function\n            \n            \n                concatenate\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/body_mixin.ts\n            \n            \n                function\n            \n            \n                validateBodyType\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/body_mixin.ts\n            \n            \n                variable\n            \n            \n                ReadableStream\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/bridge.ts\n            \n            \n                interface\n            \n            \n                BridgeTransferOptions\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/bridge.ts\n            \n            \n                function\n            \n            \n                initBridge\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/bridge.ts\n            \n            \n                variable\n            \n            \n                DEFAULT_BRIDGE_TRANSFER_OPTIONS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cache.ts\n            \n            \n                function\n            \n            \n                hashData\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cache.ts\n            \n            \n                function\n            \n            \n                normalizeURL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cache.ts\n            \n            \n                variable\n            \n            \n                cache\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cache.ts\n            \n            \n                variable\n            \n            \n                fly\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/console.ts\n            \n            \n                function\n            \n            \n                noop\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/console.ts\n            \n            \n                variable\n            \n            \n                console\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/console.ts\n            \n            \n                variable\n            \n            \n                fly\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cookie_jar.ts\n            \n            \n                class\n            \n            \n                CookieJar\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/cookie_jar.ts\n            \n            \n                function\n            \n            \n                parseCookie\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cookie_jar.ts\n            \n            \n                function\n            \n            \n                parseCookies\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cookie_jar.ts\n            \n            \n                variable\n            \n            \n                cookieAttributeNames\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/crypto.ts\n            \n            \n                variable\n            \n            \n                bridge\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/crypto.ts\n            \n            \n                variable\n            \n            \n                crypto\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/document.ts\n            \n            \n                class\n            \n            \n                Document\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/document.ts\n            \n            \n                class\n            \n            \n                DocumentParser\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/document.ts\n            \n            \n                class\n            \n            \n                Element\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/document.ts\n            \n            \n                class\n            \n            \n                Node\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/document.ts\n            \n            \n                function\n            \n            \n                parseDOMStreaming\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/document.ts\n            \n            \n                function\n            \n            \n                parseDOMSync\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/document.ts\n            \n            \n                variable\n            \n            \n                WritableParser\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error.ts\n            \n            \n                function\n            \n            \n                CallSiteToString\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error.ts\n            \n            \n                function\n            \n            \n                cloneCallSite\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error.ts\n            \n            \n                function\n            \n            \n                mapEvalOrigin\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error.ts\n            \n            \n                function\n            \n            \n                mapSourcePosition\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error.ts\n            \n            \n                function\n            \n            \n                originalPositionFor\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error.ts\n            \n            \n                function\n            \n            \n                prepareStackTrace\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error.ts\n            \n            \n                function\n            \n            \n                wrapCallSite\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/error.ts\n            \n            \n                variable\n            \n            \n                bridge\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/events.ts\n            \n            \n                class\n            \n            \n                FetchEvent\n            \n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/events.ts\n            \n            \n                function\n            \n            \n                addEventListener\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/events.ts\n            \n            \n                function\n            \n            \n                dispatchEvent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/events.ts\n            \n            \n                function\n            \n            \n                fireFetchEvent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/events.ts\n            \n            \n                variable\n            \n            \n                bridge\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/events.ts\n            \n            \n                variable\n            \n            \n                emitter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/events.ts\n            \n            \n                variable\n            \n            \n                invalidResponseType\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fetch.ts\n            \n            \n                class\n            \n            \n                TimeoutError\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fetch.ts\n            \n            \n                interface\n            \n            \n                FlyRequestInit\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/fetch.ts\n            \n            \n                function\n            \n            \n                fetch\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fetch.ts\n            \n            \n                variable\n            \n            \n                bridge\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/cache/global.ts\n            \n            \n                function\n            \n            \n                del\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/global.ts\n            \n            \n                function\n            \n            \n                purgeTag\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/global.ts\n            \n            \n                variable\n            \n            \n                bridge\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/index.ts\n            \n            \n                interface\n            \n            \n                CacheSetOptions\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/fly/cache/index.ts\n            \n            \n                function\n            \n            \n                del\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/index.ts\n            \n            \n                function\n            \n            \n                expire\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/index.ts\n            \n            \n                function\n            \n            \n                get\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/index.ts\n            \n            \n                function\n            \n            \n                getMulti\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/index.ts\n            \n            \n                function\n            \n            \n                getMultiString\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/index.ts\n            \n            \n                function\n            \n            \n                getString\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/index.ts\n            \n            \n                function\n            \n            \n                purgeTag\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/index.ts\n            \n            \n                function\n            \n            \n                set\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/index.ts\n            \n            \n                function\n            \n            \n                setTags\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/index.ts\n            \n            \n                variable\n            \n            \n                bridge\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/index.ts\n            \n            \n                variable\n            \n            \n                cache\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/cache/response.ts\n            \n            \n                interface\n            \n            \n                Metadata\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/fly/cache/response.ts\n            \n            \n                interface\n            \n            \n                ResponseCacheSetOptions\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/fly/cache/response.ts\n            \n            \n                function\n            \n            \n                cacheResult\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/cache/response.ts\n            \n            \n                function\n            \n            \n                del\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/response.ts\n            \n            \n                function\n            \n            \n                expire\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/response.ts\n            \n            \n                function\n            \n            \n                get\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/response.ts\n            \n            \n                function\n            \n            \n                getMeta\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/response.ts\n            \n            \n                function\n            \n            \n                hex\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/cache/response.ts\n            \n            \n                function\n            \n            \n                set\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/response.ts\n            \n            \n                function\n            \n            \n                setMeta\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/cache/response.ts\n            \n            \n                function\n            \n            \n                setTags\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/response.ts\n            \n            \n                function\n            \n            \n                touch\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/cache/response.ts\n            \n            \n                variable\n            \n            \n                defaultSkipHeaders\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/data.ts\n            \n            \n                class\n            \n            \n                Collection\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/fly/data.ts\n            \n            \n                variable\n            \n            \n                bridge\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/data.ts\n            \n            \n                variable\n            \n            \n                data\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/fetch/index.ts\n            \n            \n                interface\n            \n            \n                FlyRequest\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/fly/fetch/index.ts\n            \n            \n                function\n            \n            \n                normalizeRequest\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/fetch/mount.ts\n            \n            \n                interface\n            \n            \n                MountInfo\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/fetch/mount.ts\n            \n            \n                function\n            \n            \n                mount\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/fetch/pipeline.ts\n            \n            \n                function\n            \n            \n                pipeline\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/fetch/proxy.ts\n            \n            \n                interface\n            \n            \n                ProxyOptions\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/fly/fetch/proxy.ts\n            \n            \n                function\n            \n            \n                buildProxyRequest\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/fetch/proxy.ts\n            \n            \n                function\n            \n            \n                proxy\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/http.ts\n            \n            \n                function\n            \n            \n                ensureFetchEvent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/http.ts\n            \n            \n                function\n            \n            \n                handleFetch\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/http.ts\n            \n            \n                variable\n            \n            \n                fetchEventBound\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/http.ts\n            \n            \n                variable\n            \n            \n                fly\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/http.ts\n            \n            \n                variable\n            \n            \n                flyFetchHandler\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                class\n            \n            \n                Image\n            \n            \n                90 %\n                (19/21)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                interface\n            \n            \n                Color\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                interface\n            \n            \n                CreateOptions\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                interface\n            \n            \n                ExtendOptions\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                interface\n            \n            \n                JpegOptions\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                interface\n            \n            \n                Metadata\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                interface\n            \n            \n                OperationResult\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                interface\n            \n            \n                OverlayOptions\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                interface\n            \n            \n                PngOptions\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                interface\n            \n            \n                ResizeOptions\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                interface\n            \n            \n                ScaleOptions\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                interface\n            \n            \n                WebpOptions\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                function\n            \n            \n                imageMetadata\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                function\n            \n            \n                imageOperation\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/image.ts\n            \n            \n                function\n            \n            \n                imageToBuffer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/index.ts\n            \n            \n                function\n            \n            \n                deprecatedProxy\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/index.ts\n            \n            \n                function\n            \n            \n                flyInit\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/log.ts\n            \n            \n                function\n            \n            \n                log\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/log.ts\n            \n            \n                variable\n            \n            \n                bridge\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/static.ts\n            \n            \n                interface\n            \n            \n                StaticServerOptions\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/fly/static.ts\n            \n            \n                function\n            \n            \n                staticServer\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/fly/static.ts\n            \n            \n                variable\n            \n            \n                mimeTypes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/streams.ts\n            \n            \n                function\n            \n            \n                isFlyStream\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/streams.ts\n            \n            \n                function\n            \n            \n                refToStream\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fly/streams.ts\n            \n            \n                variable\n            \n            \n                bridge\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/form_data.ts\n            \n            \n                class\n            \n            \n                FormData\n            \n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/headers.ts\n            \n            \n                function\n            \n            \n                fill\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/headers.ts\n            \n            \n                function\n            \n            \n                Headers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/headers.ts\n            \n            \n                function\n            \n            \n                HeadersIterator\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logger.ts\n            \n            \n                function\n            \n            \n                flyLog\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logger.ts\n            \n            \n                variable\n            \n            \n                _log\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logger.ts\n            \n            \n                variable\n            \n            \n                logger\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware.ts\n            \n            \n                class\n            \n            \n                Middleware\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/middleware.ts\n            \n            \n                class\n            \n            \n                MiddlewareChain\n            \n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/middleware.ts\n            \n            \n                class\n            \n            \n                MiddlewareSettings\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/middleware.ts\n            \n            \n                variable\n            \n            \n                errMiddlewareNotPromise\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware.ts\n            \n            \n                variable\n            \n            \n                middleware\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/request.ts\n            \n            \n                class\n            \n            \n                Request\n            \n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/request.ts\n            \n            \n                function\n            \n            \n                byteUpperCase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/request.ts\n            \n            \n                function\n            \n            \n                normalizeMethod\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/response.ts\n            \n            \n                class\n            \n            \n                Response\n            \n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/response.ts\n            \n            \n                function\n            \n            \n                ushort\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/streams.ts\n            \n            \n                variable\n            \n            \n                interfaces\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/streams.ts\n            \n            \n                variable\n            \n            \n                \n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/text-encoding.ts\n            \n            \n                class\n            \n            \n                TextDecoder\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/text-encoding.ts\n            \n            \n                class\n            \n            \n                TextEncoder\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/text-encoding.ts\n            \n            \n                variable\n            \n            \n                bridge\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/timers.ts\n            \n            \n                function\n            \n            \n                clearInterval\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/timers.ts\n            \n            \n                function\n            \n            \n                clearTimeout\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/timers.ts\n            \n            \n                function\n            \n            \n                setImmediate\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/timers.ts\n            \n            \n                function\n            \n            \n                setInterval\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/timers.ts\n            \n            \n                function\n            \n            \n                setTimeout\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/timers.ts\n            \n            \n                variable\n            \n            \n                bridge\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            better-assert : ^1.0.2\n        \n            cookie : ^0.3.1\n        \n            css-select : ^1.3.0-rc0\n        \n            domutils : ^1.6.2\n        \n            eventemitter2 : ^5.0.1\n        \n            htmlparser2 : ^3.9.2\n        \n            http-cache-semantics : ^3.8.1\n        \n            universal-url-lite : ^1.0.0\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fit   (src/.../image.ts)\n                        \n                        \n                            gravity   (src/.../image.ts)\n                        \n                        \n                            kernel   (src/.../image.ts)\n                        \n                        \n                            strategy   (src/.../image.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/fly/image.ts\n    \n        \n            \n                \n                    \n                        \n                        fit\n                    \n                \n                    \n                        \n                            Specifies how an image should fit into the provided width and height\n\n                        \n                    \n                        \n                            \n                                 cover\n                            \n                        \n                        \n                            \n                                Value : cover\n                            \n                        \n                        \n                            \n                                 contain\n                            \n                        \n                        \n                            \n                                Value : contain\n                            \n                        \n                        \n                            \n                                 fill\n                            \n                        \n                        \n                            \n                                Value : fill\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gravity\n                    \n                \n                        \n                            \n                                 center\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 centre\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 north\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 east\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 south\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 west\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 northeast\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 southeast\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 southwest\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 northwest\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        kernel\n                    \n                \n                        \n                            \n                                 nearest\n                            \n                        \n                        \n                            \n                                Value : nearest\n                            \n                        \n                        \n                            \n                                 cubic\n                            \n                        \n                        \n                            \n                                Value : cubic\n                            \n                        \n                        \n                            \n                                 lanczos2\n                            \n                        \n                        \n                            \n                                Value : lanczos2\n                            \n                        \n                        \n                            \n                                 lanczos3\n                            \n                        \n                        \n                            \n                                Value : lanczos3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        strategy\n                    \n                \n                        \n                            \n                                 entropy\n                            \n                        \n                        \n                            \n                                Value : 16\n                            \n                        \n                        \n                            \n                                 attention\n                            \n                        \n                        \n                            \n                                Value : 17\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFly edge application environment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlobPart   (src/.../blob.ts)\n                        \n                        \n                            BodySource   (src/.../body_mixin.ts)\n                        \n                        \n                            CachedResponse   (src/.../response.ts)\n                        \n                        \n                            CryptoData   (src/.../crypto.ts)\n                        \n                        \n                            FetchFunction   (src/.../index.ts)\n                        \n                        \n                            FetchGenerator   (src/.../index.ts)\n                        \n                        \n                            PipelineStage   (src/.../pipeline.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/blob.ts\n    \n        \n            \n                \n                    \n                        \n                        BlobPart\n                    \n                \n                \n                    \n                        BlobPart:     BufferSource | USVString | Blob\n\n                    \n                \n            \n        \n\n    src/body_mixin.ts\n    \n        \n            \n                \n                    \n                        \n                        BodySource\n                    \n                \n                \n                    \n                        BodySource:     Blob | BufferSource | FormData | URLSearchParams | ReadableStream | String\n\n                    \n                \n            \n        \n\n    src/fly/cache/response.ts\n    \n        \n            \n                \n                    \n                        \n                        CachedResponse\n                    \n                \n                    \n                        \n                            A response with cache info attached\n\n                        \n                    \n                \n                    \n                        CachedResponse:     \n\n                    \n                \n            \n        \n\n    src/crypto.ts\n    \n        \n            \n                \n                    \n                        \n                        CryptoData\n                    \n                \n                \n                    \n                        CryptoData:     BufferSource | string\n\n                    \n                \n            \n        \n\n    src/fly/fetch/index.ts\n    \n        \n            \n                \n                    \n                        \n                        FetchFunction\n                    \n                \n                    \n                        \n                            A fetch-like function.\n\n                        \n                    \n                \n                    \n                        FetchFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        FetchGenerator\n                    \n                \n                    \n                        \n                            A function that generates a fetch-like function with additional logic\n\n                        \n                    \n                \n                    \n                        FetchGenerator:     function\n\n                    \n                \n            \n        \n\n    src/fly/fetch/pipeline.ts\n    \n        \n            \n                \n                    \n                        \n                        PipelineStage\n                    \n                \n                    \n                        \n                            PipeplineStage can either be a FetchGenerator function, or a tuple of\nFetchGenerator + args.\n\n                        \n                    \n                \n                    \n                        PipelineStage:     FetchGenerator | \n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _log   (src/.../logger.ts)\n                        \n                        \n                            bridge   (src/.../events.ts)\n                        \n                        \n                            bridge   (src/.../streams.ts)\n                        \n                        \n                            bridge   (src/.../timers.ts)\n                        \n                        \n                            bridge   (src/.../data.ts)\n                        \n                        \n                            bridge   (src/.../crypto.ts)\n                        \n                        \n                            bridge   (src/.../global.ts)\n                        \n                        \n                            bridge   (src/.../fetch.ts)\n                        \n                        \n                            bridge   (src/.../error.ts)\n                        \n                        \n                            bridge   (src/.../log.ts)\n                        \n                        \n                            bridge   (src/.../index.ts)\n                        \n                        \n                            bridge   (src/.../text-encoding.ts)\n                        \n                        \n                            cache   (src/.../cache.ts)\n                        \n                        \n                            cache   (src/.../index.ts)\n                        \n                        \n                            console   (src/.../console.ts)\n                        \n                        \n                            cookieAttributeNames   (src/.../cookie_jar.ts)\n                        \n                        \n                            crypto   (src/.../crypto.ts)\n                        \n                        \n                            data   (src/.../data.ts)\n                        \n                        \n                            DEFAULT_BRIDGE_TRANSFER_OPTIONS   (src/.../bridge.ts)\n                        \n                        \n                            defaultSkipHeaders   (src/.../response.ts)\n                        \n                        \n                            emitter   (src/.../events.ts)\n                        \n                        \n                            errMiddlewareNotPromise   (src/.../middleware.ts)\n                        \n                        \n                            fetchEventBound   (src/.../http.ts)\n                        \n                        \n                            fly   (src/.../cache.ts)\n                        \n                        \n                            fly   (src/.../http.ts)\n                        \n                        \n                            fly   (src/.../console.ts)\n                        \n                        \n                            flyFetchHandler   (src/.../http.ts)\n                        \n                        \n                            interfaces   (src/.../streams.ts)\n                        \n                        \n                            invalidResponseType   (src/.../events.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            middleware   (src/.../middleware.ts)\n                        \n                        \n                               (src/.../streams.ts)\n                        \n                        \n                            mimeTypes   (src/.../static.ts)\n                        \n                        \n                            ReadableStream   (src/.../body_mixin.ts)\n                        \n                        \n                            WritableParser   (src/.../document.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/logger.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _log:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logger:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  info(fmt: any, ...params: any[]) {\n    flyLog(\"info\", format(fmt, ...params))\n  },\n  warn(fmt: any, ...params: any[]) {\n    flyLog(\"warn\", format(fmt, ...params))\n  },\n  error(fmt: any, ...params: any[]) {\n    flyLog(\"error\", format(fmt, ...params))\n  },\n  debug(fmt: any, ...params: any[]) {\n    flyLog(\"debug\", format(fmt, ...params))\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/events.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bridge:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emitter:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invalidResponseType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        invalidResponseType:     \n\n                    \n                \n                    \n                        \n                            Default value : new Error(\n  `Invalid response type for 'fetch' event. Expecting a straight Response, a function returning a Promise or a Response.`\n)\n                        \n                    \n\n\n            \n        \n\n    src/fly/streams.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bridge:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/timers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bridge:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/fly/data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bridge:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Persistent, global key/value data store. Open collections, write data with put. Then retrieve data with get.\nKeys and values are stored in range chunks. Chunks migrate to the region they're most frequently accessed from.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  collection(name: string) {\n    return new Collection(name)\n  },\n  dropCollection(name: string) {\n    return new Promise((resolve, reject) => {\n      bridge.dispatch(\"fly.Data.dropCollection\", name, (err: string | null, ok: boolean) => {\n        if (err) {\n          reject(new Error(err))\n          return\n        }\n        resolve(ok)\n      })\n    })\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/crypto.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bridge:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            crypto\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        crypto:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  subtle: {\n    digest(algo: string, data: CryptoData, encoding?: string): Promise {\n      return bridge.dispatch(\"digestHash\", algo, data, encoding)\n    },\n    digestSync(algo: string, data: CryptoData, encoding?: string): ArrayBuffer | string {\n      return bridge.dispatchSync(\"digestHashAsync\", algo, data, encoding)\n    }\n  },\n  getRandomValues(typedArray: Uint8Array): void {\n    if (!(typedArray instanceof Uint8Array)) {\n      throw new Error(\"Only Uint8Array are supported at present\")\n    }\n    const newArr = new Uint8Array(bridge.dispatchSync(\"getRandomValues\", typedArray.length))\n    typedArray.set(newArr)\n    return\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/fly/cache/global.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bridge:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        The Fly global cache API, allows eventually consistent modifications to all caches in all regions.\n * import cache from \"@fly/cache\"\n *\n * // notify all caches to delete a key\n * await cache.global.del(\"key-to-delete\")\n *\n * // notify all caches to purge a tag\n * await cache.global.purgeTag(\"key-to-purge\")\n *\n                    \n                \n\n            \n        \n\n    src/fetch.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bridge:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/error.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bridge:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/fly/log.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bridge:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/fly/cache/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bridge:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        An API for accessing a regional, volatile cache. Data stored in @fly/cache can have an associated per-key time to live (TTL), and we will evict key data automatically after the elapsed TTL. We will also evict unused data when we need to reclaim space.\n * import cache from \"@fly/cache\"\n *\n * await cache.set(\"test-key\", \"test-value\")\n *\n * const s = await cache.getString(\"test-key\")\n *See fly/cache/response for caching HTTP Response objects.\nSee fly/cache/global for global cache del/purge\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  get,\n  getString,\n  getMulti,\n  getMultiString,\n  set,\n  expire,\n  del,\n  setTags,\n  purgeTag,\n  global\n}\n                        \n                    \n\n\n            \n        \n\n    src/text-encoding.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bridge:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/cache.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fly\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fly:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/console.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            console\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        console:     Console\n\n                    \n                \n                    \n                        \n                            Type :     Console\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // TODO: adding junk to conform to merged Console interface from node & lib.dom\n  memory: undefined,\n  markTimeline: undefined,\n  msIsIndependentlyComposed: undefined,\n  select: undefined,\n  timeStamp: undefined,\n  timeline: undefined,\n  timelineEnd: undefined,\n  Console: undefined,\n\n  log(...args) {\n    fly.log(\"info\", ...args)\n  },\n  info(...args) {\n    fly.log(\"info\", ...args)\n  },\n  assert(assertion, ...args) {\n    if (!assertion) { fly.log(\"info\", ...args) }\n  },\n  error(...args) {\n    fly.log(\"error\", ...args)\n  },\n  exception(...args) {\n    fly.log(\"error\", ...args)\n  },\n  warn(...args) {\n    fly.log(\"warn\", ...args)\n  },\n  trace() {\n    const stack = new Error().stack.match(/[^\\r\\n]+/g)\n    fly.log(\"info\", \"Trace:\\n\" + stack.slice(2).join(\"\\n\"))\n  },\n\n  // off-spec\n  debug(...args) {\n    fly.log(\"debug\", ...args)\n  },\n\n  // unimplemented\n  clear: noop,\n  count: noop,\n  countReset: noop,\n  dir: noop,\n  dirxml: noop,\n  group: noop,\n  groupCollapsed: noop,\n  groupEnd: noop,\n  // TODO: commenting out to resolve definition conflict between @types/node & lib.dom\n  //  see: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/node/v4/index.d.ts#L15\n  //  note: 'timestamp' here & 'timeStamp' above...\n  // timestamp: noop,\n\n  // TODO: Implement\n  profile: noop,\n  profileEnd: noop,\n  table: noop,\n  time: noop,\n  timeEnd: noop\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fly\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fly:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/cookie_jar.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cookieAttributeNames\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cookieAttributeNames:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  \"Max-Age\",\n  \"Expires\",\n  \"HttpOnly\",\n  \"Secure\",\n  \"Path\",\n  \"SameSite\",\n  \"Domain\"\n]\n                        \n                    \n\n\n            \n        \n\n    src/bridge.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_BRIDGE_TRANSFER_OPTIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_BRIDGE_TRANSFER_OPTIONS:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  release: true,\n  transfer: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/fly/cache/response.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultSkipHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultSkipHeaders:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\"authorization\", \"set-cookie\"]\n                        \n                    \n\n\n            \n        \n\n    src/middleware.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            errMiddlewareNotPromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errMiddlewareNotPromise:     \n\n                    \n                \n                    \n                        \n                            Default value : new Error(\"Middleware did not return a promise\")\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            middleware\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        middleware:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/fly/http.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fetchEventBound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fetchEventBound:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fly\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fly:     \n\n                    \n                \n\n                \n                    \n                        Fly API for working with HTTP requests.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flyFetchHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flyFetchHandler:     null\n\n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    src/streams.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            interfaces\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        interfaces:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  ReadableStream,\n  WritableStream,\n  ByteLengthQueuingStrategy,\n  CountQueuingStrategy,\n  TransformStream\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                \n                \n                    \n                        :     \n\n                    \n                \n                    \n                        \n                            Default value : require(\"whatwg-streams/reference-implementation/lib/readable-stream\")\n                        \n                    \n\n\n            \n        \n\n    src/fly/static.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mimeTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mimeTypes:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  html: \"text/html\",\n  htm: \"text/html\",\n  shtml: \"text/html\",\n  css: \"text/css\",\n  xml: \"text/xml\",\n  gif: \"image/gif\",\n  jpeg: \"image/jpeg\",\n  jpg: \"image/jpeg\",\n  js: \"application/javascript\",\n  atom: \"application/atom+xml\",\n  rss: \"application/rss+xml\",\n  mml: \"text/mathml\",\n  txt: \"text/plain\",\n  jad: \"text/vnd.sun.j2me.app-descriptor\",\n  wml: \"text/vnd.wap.wml\",\n  htc: \"text/x-component\",\n  png: \"image/png\",\n  svg: \"image/svg+xml\",\n  svgz: \"image/svg+xml\",\n  tif: \"image/tiff\",\n  tiff: \"image/tiff\",\n  wbmp: \"image/vnd.wap.wbmp\",\n  webp: \"image/webp\",\n  ico: \"image/x-icon\",\n  jng: \"image/x-jng\",\n  bmp: \"image/x-ms-bmp\",\n  woff: \"font/woff\",\n  woff2: \"font/woff2\",\n  jar: \"application/java-archive\",\n  war: \"application/java-archive\",\n  ear: \"application/java-archive\",\n  json: \"application/json\",\n  hqx: \"application/mac-binhex40\",\n  doc: \"application/msword\",\n  pdf: \"application/pdf\",\n  ps: \"application/postscript\",\n  eps: \"application/postscript\",\n  ai: \"application/postscript\",\n  rtf: \"application/rtf\",\n  m3u8: \"application/vnd.apple.mpegurl\",\n  kml: \"application/vnd.google-earth.kml+xml\",\n  kmz: \"application/vnd.google-earth.kmz\",\n  xls: \"application/vnd.ms-excel\",\n  eot: \"application/vnd.ms-fontobject\",\n  ppt: \"application/vnd.ms-powerpoint\",\n  odg: \"application/vnd.oasis.opendocument.graphics\",\n  odp: \"application/vnd.oasis.opendocument.presentation\",\n  ods: \"application/vnd.oasis.opendocument.spreadsheet\",\n  odt: \"application/vnd.oasis.opendocument.text\",\n  pptx: \"application/vnd.openxmlformats-officedocument.presentationml.presentation\",\n  xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  docx: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n  wmlc: \"application/vnd.wap.wmlc\",\n  \"7z\": \"application/x-7z-compressed\",\n  cco: \"application/x-cocoa\",\n  jardiff: \"application/x-java-archive-diff\",\n  jnlp: \"application/x-java-jnlp-file\",\n  run: \"application/x-makeself\",\n  pl: \"application/x-perl\",\n  pm: \"application/x-perl\",\n  prc: \"application/x-pilot\",\n  pdb: \"application/x-pilot\",\n  rar: \"application/x-rar-compressed\",\n  rpm: \"application/x-redhat-package-manager\",\n  sea: \"application/x-sea\",\n  swf: \"application/x-shockwave-flash\",\n  sit: \"application/x-stuffit\",\n  tcl: \"application/x-tcl\",\n  tk: \"application/x-tcl\",\n  der: \"application/x-x509-ca-cert\",\n  pem: \"application/x-x509-ca-cert\",\n  crt: \"application/x-x509-ca-cert\",\n  xpi: \"application/x-xpinstall\",\n  xhtml: \"application/xhtml+xml\",\n  xspf: \"application/xspf+xml\",\n  zip: \"application/zip\",\n  bin: \"application/octet-stream\",\n  exe: \"application/octet-stream\",\n  dll: \"application/octet-stream\",\n  deb: \"application/octet-stream\",\n  dmg: \"application/octet-stream\",\n  iso: \"application/octet-stream\",\n  img: \"application/octet-stream\",\n  msi: \"application/octet-stream\",\n  msp: \"application/octet-stream\",\n  msm: \"application/octet-stream\",\n  mid: \"audio/midi\",\n  midi: \"audio/midi\",\n  kar: \"audio/midi\",\n  mp3: \"audio/mpeg\",\n  ogg: \"audio/ogg\",\n  m4a: \"audio/x-m4a\",\n  ra: \"audio/x-realaudio\",\n  \"3gpp\": \"video/3gpp\",\n  \"3gp\": \"video/3gpp\",\n  ts: \"video/mp2t\",\n  mp4: \"video/mp4\",\n  mpeg: \"video/mpeg\",\n  mpg: \"video/mpeg\",\n  mov: \"video/quicktime\",\n  webm: \"video/webm\",\n  flv: \"video/x-flv\",\n  m4v: \"video/x-m4v\",\n  mng: \"video/x-mng\",\n  asx: \"video/x-ms-asf\",\n  asf: \"video/x-ms-asf\",\n  wmv: \"video/x-ms-wmv\",\n  avi: \"video/x-msvideo\"\n}\n                        \n                    \n\n\n            \n        \n\n    src/body_mixin.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ReadableStream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ReadableStream:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/document.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WritableParser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        WritableParser:     \n\n                    \n                \n                    \n                        \n                            Default value : htmlparser.WritableStream\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
